{
  "openapi": "3.1.0",
  "info": {
    "title": "nextcloud",
    "description": "Nextcloud APIs",
    "license": {
      "name": "agpl"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/ocs/v2.php/core/getapppassword": {
      "get": {
        "operationId": "core-app_password-get-app-password",
        "summary": "Create app password",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App password returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "apppassword": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "apppassword"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Creating app password is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/app_password"
        ]
      }
    },
    "/ocs/v2.php/core/apppassword": {
      "delete": {
        "operationId": "core-app_password-delete-app-password",
        "summary": "Delete app password",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App password deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Deleting app password is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/app_password"
        ]
      }
    },
    "/ocs/v2.php/core/apppassword/rotate": {
      "post": {
        "operationId": "core-app_password-rotate-app-password",
        "summary": "Rotate app password",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App password returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "apppassword": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "apppassword"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Rotating app password is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/app_password"
        ]
      }
    },
    "/ocs/v2.php/core/apppassword/confirm": {
      "put": {
        "operationId": "core-app_password-confirm-user-password",
        "summary": "Confirm the user password",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "description": "The password of the user",
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password confirmation succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "lastLogin": {
                              "type": "integer",
                              "format": "int64"
                            }
                          },
                          "required": [
                            "lastLogin"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Password confirmation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/app_password"
        ]
      }
    },
    "/ocs/v2.php/core/autocomplete/get": {
      "get": {
        "operationId": "core-auto_complete-get",
        "summary": "Autocomplete a query",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemType",
            "in": "query",
            "description": "Type of the items to search for",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "itemId",
            "in": "query",
            "description": "ID of the items to search for",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "sorter",
            "in": "query",
            "description": "can be piped, top prio first, e.g.: \"commenters|share-recipients\"",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "shareTypes[]",
            "in": "query",
            "description": "Types of shares to search for",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "default": []
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 10
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autocomplete results returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreAutocompleteResult"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/auto_complete"
        ]
      }
    },
    "/ocs/v2.php/collaboration/resources/collections/{collectionId}": {
      "get": {
        "operationId": "core-collaboration_resources-list-collection",
        "summary": "Get a collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "ID of the collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreCollection"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      },
      "post": {
        "operationId": "core-collaboration_resources-add-resource",
        "summary": "Add a resource to a collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "ID of the collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resourceType": {
                    "description": "Name of the resource",
                    "type": "string"
                  },
                  "resourceId": {
                    "description": "ID of the resource",
                    "type": "string"
                  }
                },
                "required": [
                  "resourceType",
                  "resourceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreCollection"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Collection not found or resource inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      },
      "delete": {
        "operationId": "core-collaboration_resources-remove-resource",
        "summary": "Remove a resource from a collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "ID of the collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "description": "Name of the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "ID of the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreCollection"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Collection or resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      },
      "put": {
        "operationId": "core-collaboration_resources-rename-collection",
        "summary": "Rename a collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "ID of the collection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "collectionName": {
                    "description": "New name",
                    "type": "string"
                  }
                },
                "required": [
                  "collectionName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreCollection"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      }
    },
    "/ocs/v2.php/collaboration/resources/collections/search/{filter}": {
      "get": {
        "operationId": "core-collaboration_resources-search-collections",
        "summary": "Search for collections",
        "parameters": [
          {
            "name": "filter",
            "in": "path",
            "description": "Filter collections",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collections returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreCollection"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      }
    },
    "/ocs/v2.php/collaboration/resources/{resourceType}/{resourceId}": {
      "get": {
        "operationId": "core-collaboration_resources-get-collections-by-resource",
        "summary": "Get collections by resource",
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "Type of the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collections returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreCollection"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not accessible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      }
    },
    "/ocs/v2.php/collaboration/resources/{baseResourceType}/{baseResourceId}": {
      "post": {
        "operationId": "core-collaboration_resources-create-collection-on-resource",
        "summary": "Create a collection for a resource",
        "parameters": [
          {
            "name": "baseResourceType",
            "in": "path",
            "description": "Type of the base resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "baseResourceId",
            "in": "path",
            "description": "ID of the base resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the collection",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Collection returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreCollection"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Creating collection is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/collaboration_resources"
        ]
      }
    },
    "/ocs/v2.php/hovercard/v1/{userId}": {
      "get": {
        "operationId": "core-hover_card-get-user",
        "summary": "Get the account details for a hovercard",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account details returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            },
                            "actions": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreContactsAction"
                              }
                            }
                          },
                          "required": [
                            "userId",
                            "displayName",
                            "actions"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/hover_card"
        ]
      }
    },
    "/ocs/v2.php/core/navigation/apps": {
      "get": {
        "operationId": "core-navigation-get-apps-navigation",
        "summary": "Get the apps navigation",
        "parameters": [
          {
            "name": "absolute",
            "in": "query",
            "description": "Rewrite URLs to absolute ones",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps navigation returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreNavigationEntry"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "304": {
            "description": "No apps navigation changed"
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/navigation"
        ]
      }
    },
    "/ocs/v2.php/core/navigation/settings": {
      "get": {
        "operationId": "core-navigation-get-settings-navigation",
        "summary": "Get the settings navigation",
        "parameters": [
          {
            "name": "absolute",
            "in": "query",
            "description": "Rewrite URLs to absolute ones",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps navigation returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreNavigationEntry"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "304": {
            "description": "No apps navigation changed"
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/navigation"
        ]
      }
    },
    "/ocs/v2.php/cloud/capabilities": {
      "get": {
        "operationId": "core-ocs-get-capabilities",
        "summary": "Get the capabilities",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Capabilities returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "object",
                              "properties": {
                                "major": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "minor": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "micro": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "string": {
                                  "type": "string"
                                },
                                "edition": {
                                  "type": "string"
                                },
                                "extendedSupport": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "major",
                                "minor",
                                "micro",
                                "string",
                                "edition",
                                "extendedSupport"
                              ]
                            },
                            "capabilities": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object"
                              },
                              "anyOf": [
                                {
                                  "$ref": "#/components/schemas/CoreCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/CorePublicCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/CloudFederationApiCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/CommentsCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/DavCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/FilesCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/FilesSharingCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/FilesTrashbinCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/FilesVersionsCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/ProvisioningApiCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/SharebymailCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/SystemtagsCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/ThemingPublicCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/UserStatusCapabilities"
                                },
                                {
                                  "$ref": "#/components/schemas/WeatherStatusCapabilities"
                                }
                              ]
                            }
                          },
                          "required": [
                            "version",
                            "capabilities"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/ocs"
        ]
      }
    },
    "/ocs/v2.php/profile/{targetUserId}": {
      "put": {
        "operationId": "core-profile_api-set-visibility",
        "summary": "Update the visibility of a parameter",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "targetUserId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paramId": {
                    "description": "ID of the parameter",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "New visibility",
                    "type": "string"
                  }
                },
                "required": [
                  "paramId",
                  "visibility"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visibility updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Updating visibility is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Not allowed to edit other users visibility",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/profile_api"
        ]
      }
    },
    "/ocs/v2.php/references/extract": {
      "post": {
        "operationId": "core-reference_api-extract",
        "summary": "Extract references from a text",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "description": "Text to extract from",
                    "type": "string"
                  },
                  "resolve": {
                    "description": "Resolve the references",
                    "type": "boolean",
                    "default": false
                  },
                  "limit": {
                    "description": "Maximum amount of references to extract",
                    "type": "integer",
                    "format": "int64",
                    "default": 1
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "References returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/references/extractPublic": {
      "post": {
        "operationId": "core-reference_api-extract-public",
        "summary": "Extract references from a text",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "description": "Text to extract from",
                    "type": "string"
                  },
                  "sharingToken": {
                    "description": "Token of the public share",
                    "type": "string"
                  },
                  "resolve": {
                    "description": "Resolve the references",
                    "type": "boolean",
                    "default": false
                  },
                  "limit": {
                    "description": "Maximum amount of references to extract, limited to 15",
                    "type": "integer",
                    "format": "int64",
                    "default": 1
                  }
                },
                "required": [
                  "text",
                  "sharingToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "References returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/references/resolve": {
      "get": {
        "operationId": "core-reference_api-resolve-one",
        "summary": "Resolve a reference",
        "parameters": [
          {
            "name": "reference",
            "in": "query",
            "description": "Reference to resolve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      },
      "post": {
        "operationId": "core-reference_api-resolve",
        "summary": "Resolve multiple references",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "references": {
                    "description": "References to resolve",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "limit": {
                    "description": "Maximum amount of references to resolve",
                    "type": "integer",
                    "format": "int64",
                    "default": 1
                  }
                },
                "required": [
                  "references"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "References returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/references/resolvePublic": {
      "get": {
        "operationId": "core-reference_api-resolve-one-public",
        "summary": "Resolve from a public page",
        "parameters": [
          {
            "name": "reference",
            "in": "query",
            "description": "Reference to resolve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sharingToken",
            "in": "query",
            "description": "Token of the public share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      },
      "post": {
        "operationId": "core-reference_api-resolve-public",
        "summary": "Resolve multiple references from a public page",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "references": {
                    "description": "References to resolve",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sharingToken": {
                    "description": "Token of the public share",
                    "type": "string"
                  },
                  "limit": {
                    "description": "Maximum amount of references to resolve, limited to 15",
                    "type": "integer",
                    "format": "int64",
                    "default": 1
                  }
                },
                "required": [
                  "references",
                  "sharingToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "References returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "references": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreReference",
                                "nullable": true
                              }
                            }
                          },
                          "required": [
                            "references"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/references/providers": {
      "get": {
        "operationId": "core-reference_api-get-providers-info",
        "summary": "Get the providers",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Providers returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreReferenceProvider"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/references/provider/{providerId}": {
      "put": {
        "operationId": "core-reference_api-touch-provider",
        "summary": "Touch a provider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "ID of the provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timestamp": {
                    "description": "Timestamp of the last usage",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Provider touched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "success"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/tasktypes": {
      "get": {
        "operationId": "core-task_processing_api-task-types",
        "summary": "Returns all available TaskProcessing task types",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task types returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/CoreTaskProcessingTaskType"
                              }
                            }
                          },
                          "required": [
                            "types"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/schedule": {
      "post": {
        "operationId": "core-task_processing_api-schedule",
        "summary": "Schedules a task",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "description": "Task's input parameters",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "type": {
                    "description": "Type of the task",
                    "type": "string"
                  },
                  "appId": {
                    "description": "ID of the app that will execute the task",
                    "type": "string"
                  },
                  "customId": {
                    "description": "An arbitrary identifier for the task",
                    "type": "string",
                    "default": ""
                  },
                  "webhookUri": {
                    "description": "URI to be requested when the task finishes",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "webhookMethod": {
                    "description": "Method used for the webhook request (HTTP:GET, HTTP:POST, HTTP:PUT, HTTP:DELETE or AppAPI:APP_ID:GET, AppAPI:APP_ID:POST...)",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "input",
                  "type",
                  "appId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTaskProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Scheduling task is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Cannot schedule task because it references files in its input that the user doesn't have access to",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "412": {
            "description": "Scheduling task is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/task/{id}": {
      "get": {
        "operationId": "core-task_processing_api-get-task",
        "summary": "Gets a task including status and result",
        "description": "Tasks are removed 1 week after receiving their last update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTaskProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      },
      "delete": {
        "operationId": "core-task_processing_api-delete-task",
        "summary": "Deletes a task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/tasks/app/{appId}": {
      "get": {
        "operationId": "core-task_processing_api-list-tasks-by-app",
        "summary": "Returns tasks for the current user filtered by the appId and optional customId",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customId",
            "in": "query",
            "description": "An arbitrary identifier for the task",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "tasks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTaskProcessingTask"
                              }
                            }
                          },
                          "required": [
                            "tasks"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/tasks": {
      "get": {
        "operationId": "core-task_processing_api-list-tasks",
        "summary": "Returns tasks for the current user filtered by the optional taskType and optional customId",
        "parameters": [
          {
            "name": "taskType",
            "in": "query",
            "description": "The task type to filter by",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "customId",
            "in": "query",
            "description": "An arbitrary identifier for the task",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "tasks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTaskProcessingTask"
                              }
                            }
                          },
                          "required": [
                            "tasks"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/tasks/{taskId}/file/{fileId}": {
      "get": {
        "operationId": "core-task_processing_api-get-file-contents",
        "summary": "Returns the contents of a file referenced in a task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "The file id of the file to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File content returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Task or file not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/taskprocessing/tasks/{taskId}/cancel": {
      "post": {
        "operationId": "core-task_processing_api-cancel-task",
        "summary": "Cancels a task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task canceled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTaskProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/task_processing_api"
        ]
      }
    },
    "/ocs/v2.php/teams/{teamId}/resources": {
      "get": {
        "operationId": "core-teams_api-resolve-one",
        "summary": "Get all resources of a team",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique id of the team",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "resources": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTeamResource"
                              }
                            }
                          },
                          "required": [
                            "resources"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/teams_api"
        ]
      }
    },
    "/ocs/v2.php/teams/resources/{providerId}/{resourceId}": {
      "get": {
        "operationId": "core-teams_api-list-teams",
        "summary": "Get all teams of a resource",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "Identifier of the provider (e.g. deck, talk, collectives)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "Unique id of the resource to list teams for (e.g. deck board id)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teams returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "teams": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTeam"
                              }
                            }
                          },
                          "required": [
                            "teams"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/teams_api"
        ]
      }
    },
    "/ocs/v2.php/textprocessing/tasktypes": {
      "get": {
        "operationId": "core-text_processing_api-task-types",
        "summary": "This endpoint returns all available LanguageModel task types",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task types returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "types": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "description"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "types"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_processing_api"
        ]
      }
    },
    "/ocs/v2.php/textprocessing/schedule": {
      "post": {
        "operationId": "core-text_processing_api-schedule",
        "summary": "This endpoint allows scheduling a language model task",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "description": "Input text",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the task",
                    "type": "string"
                  },
                  "appId": {
                    "description": "ID of the app that will execute the task",
                    "type": "string"
                  },
                  "identifier": {
                    "description": "An arbitrary identifier for the task",
                    "type": "string",
                    "default": ""
                  }
                },
                "required": [
                  "input",
                  "type",
                  "appId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Scheduling task is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "412": {
            "description": "Scheduling task is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_processing_api"
        ]
      }
    },
    "/ocs/v2.php/textprocessing/task/{id}": {
      "get": {
        "operationId": "core-text_processing_api-get-task",
        "summary": "This endpoint allows checking the status and results of a task. Tasks are removed 1 week after receiving their last update.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_processing_api"
        ]
      },
      "delete": {
        "operationId": "core-text_processing_api-delete-task",
        "summary": "This endpoint allows to delete a scheduled task for a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextProcessingTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_processing_api"
        ]
      }
    },
    "/ocs/v2.php/textprocessing/tasks/app/{appId}": {
      "get": {
        "operationId": "core-text_processing_api-list-tasks-by-app",
        "summary": "This endpoint returns a list of tasks of a user that are related with a specific appId and optionally with an identifier",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "An arbitrary identifier for the task",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "tasks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTextProcessingTask"
                              }
                            }
                          },
                          "required": [
                            "tasks"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_processing_api"
        ]
      }
    },
    "/ocs/v2.php/text2image/is_available": {
      "get": {
        "operationId": "core-text_to_image_api-is-available",
        "summary": "Check whether this feature is available",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns availability status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "isAvailable": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "isAvailable"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      }
    },
    "/ocs/v2.php/text2image/schedule": {
      "post": {
        "operationId": "core-text_to_image_api-schedule",
        "summary": "This endpoint allows scheduling a text to image task",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "description": "Input text",
                    "type": "string"
                  },
                  "appId": {
                    "description": "ID of the app that will execute the task",
                    "type": "string"
                  },
                  "identifier": {
                    "description": "An arbitrary identifier for the task",
                    "type": "string",
                    "default": ""
                  },
                  "numberOfImages": {
                    "description": "The number of images to generate",
                    "type": "integer",
                    "format": "int64",
                    "default": 8
                  }
                },
                "required": [
                  "input",
                  "appId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextToImageTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "412": {
            "description": "Scheduling task is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      }
    },
    "/ocs/v2.php/text2image/task/{id}": {
      "get": {
        "operationId": "core-text_to_image_api-get-task",
        "summary": "This endpoint allows checking the status and results of a task. Tasks are removed 1 week after receiving their last update.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextToImageTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      },
      "delete": {
        "operationId": "core-text_to_image_api-delete-task",
        "summary": "This endpoint allows to delete a scheduled task for a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "task": {
                              "$ref": "#/components/schemas/CoreTextToImageTask"
                            }
                          },
                          "required": [
                            "task"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      }
    },
    "/ocs/v2.php/text2image/task/{id}/image/{index}": {
      "get": {
        "operationId": "core-text_to_image_api-get-image",
        "summary": "This endpoint allows downloading the resulting image of a task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the task",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the image to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Task or image not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      }
    },
    "/ocs/v2.php/text2image/tasks/app/{appId}": {
      "get": {
        "operationId": "core-text_to_image_api-list-tasks-by-app",
        "summary": "This endpoint returns a list of tasks of a user that are related with a specific appId and optionally with an identifier",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "An arbitrary identifier for the task",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task list returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "tasks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CoreTextToImageTask"
                              }
                            }
                          },
                          "required": [
                            "tasks"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/text_to_image_api"
        ]
      }
    },
    "/ocs/v2.php/translation/languages": {
      "get": {
        "operationId": "core-translation_api-languages",
        "summary": "Get the list of supported languages",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supported languages returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "from",
                                  "fromLabel",
                                  "to",
                                  "toLabel"
                                ],
                                "properties": {
                                  "from": {
                                    "type": "string"
                                  },
                                  "fromLabel": {
                                    "type": "string"
                                  },
                                  "to": {
                                    "type": "string"
                                  },
                                  "toLabel": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "languageDetection": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "languages",
                            "languageDetection"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/translation_api"
        ]
      }
    },
    "/ocs/v2.php/translation/translate": {
      "post": {
        "operationId": "core-translation_api-translate",
        "summary": "Translate a text",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "description": "Text to be translated",
                    "type": "string"
                  },
                  "fromLanguage": {
                    "description": "Language to translate from",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "toLanguage": {
                    "description": "Language to translate to",
                    "type": "string"
                  }
                },
                "required": [
                  "text",
                  "toLanguage"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Translated text returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string"
                            },
                            "from": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "text",
                            "from"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Language not detected or unable to translate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "from": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "412": {
            "description": "Translating is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "from": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "from": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/translation_api"
        ]
      }
    },
    "/ocs/v2.php/search/providers": {
      "get": {
        "operationId": "core-unified_search-get-providers",
        "summary": "Get the providers for unified search",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "the url the user is currently at",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Providers returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoreUnifiedSearchProvider"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/unified_search"
        ]
      }
    },
    "/ocs/v2.php/search/providers/{providerId}/search": {
      "get": {
        "operationId": "core-unified_search-search",
        "summary": "Launch a search for a specific search provider.",
        "description": "Additional filters are available for each provider. Send a request to /providers endpoint to list providers with their available filters.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "ID of the provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "term",
            "in": "query",
            "description": "Term to search",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Order of entries",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of entries, limited to 25",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Offset for searching",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int64"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The current user URL",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search entries returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/CoreUnifiedSearchResult"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Searching is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/unified_search"
        ]
      }
    },
    "/ocs/v2.php/core/whatsnew": {
      "get": {
        "operationId": "core-whats_new-get",
        "summary": "Get the changes",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changes returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "changelogURL": {
                              "type": "string"
                            },
                            "product": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            },
                            "whatsNew": {
                              "type": "object",
                              "properties": {
                                "regular": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "admin": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "regular",
                                "admin"
                              ]
                            }
                          },
                          "required": [
                            "changelogURL",
                            "product",
                            "version"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No changes"
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/whats_new"
        ]
      },
      "post": {
        "operationId": "core-whats_new-dismiss",
        "summary": "Dismiss the changes",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version": {
                    "description": "Version to dismiss the changes for",
                    "type": "string"
                  }
                },
                "required": [
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Changes dismissed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/whats_new"
        ]
      }
    },
    "/index.php/avatar/{userId}/{size}/dark": {
      "get": {
        "operationId": "core-avatar-get-avatar-dark",
        "summary": "Get the dark avatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "description": "Size of the avatar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                64,
                512
              ]
            }
          },
          {
            "name": "guestFallback",
            "in": "query",
            "description": "Fallback to guest avatar if not found",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Avatar not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/avatar"
        ]
      }
    },
    "/index.php/avatar/{userId}/{size}": {
      "get": {
        "operationId": "core-avatar-get-avatar",
        "summary": "Get the avatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "description": "Size of the avatar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                64,
                512
              ]
            }
          },
          {
            "name": "guestFallback",
            "in": "query",
            "description": "Fallback to guest avatar if not found",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Avatar not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/avatar"
        ]
      }
    },
    "/index.php/csrftoken": {
      "get": {
        "operationId": "core-csrf_token-index",
        "summary": "Returns a new CSRF token.",
        "responses": {
          "200": {
            "description": "CSRF token returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Strict cookie check failed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/csrf_token"
        ]
      }
    },
    "/index.php/login/v2/poll": {
      "post": {
        "operationId": "core-client_flow_login_v2-poll",
        "summary": "Poll the login flow credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Token of the flow",
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login flow credentials returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreLoginFlowV2Credentials"
                }
              }
            }
          },
          "404": {
            "description": "Login flow not found or completed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/client_flow_login_v2"
        ]
      }
    },
    "/index.php/login/v2": {
      "post": {
        "operationId": "core-client_flow_login_v2-init",
        "summary": "Init a login flow",
        "responses": {
          "200": {
            "description": "Login flow init returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreLoginFlowV2"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/client_flow_login_v2"
        ]
      }
    },
    "/index.php/avatar/guest/{guestName}/{size}": {
      "get": {
        "operationId": "core-guest_avatar-get-avatar",
        "summary": "Returns a guest avatar image response",
        "parameters": [
          {
            "name": "guestName",
            "in": "path",
            "description": "The guest name, e.g. \"Albert\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "description": "The desired avatar size, e.g. 64 for 64x64px",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                64,
                512
              ]
            }
          },
          {
            "name": "darkTheme",
            "in": "query",
            "description": "Return dark avatar",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/guest_avatar"
        ]
      }
    },
    "/index.php/avatar/guest/{guestName}/{size}/dark": {
      "get": {
        "operationId": "core-guest_avatar-get-avatar-dark",
        "summary": "Returns a dark guest avatar image response",
        "parameters": [
          {
            "name": "guestName",
            "in": "path",
            "description": "The guest name, e.g. \"Albert\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "description": "The desired avatar size, e.g. 64 for 64x64px",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                64,
                512
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Avatar returned",
            "headers": {
              "X-NC-IsCustomAvatar": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/guest_avatar"
        ]
      }
    },
    "/index.php/login/confirm": {
      "post": {
        "operationId": "core-login-confirm-password",
        "summary": "Confirm the user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "description": "The password of the user",
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password confirmation succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lastLogin": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "required": [
                    "lastLogin"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Password confirmation failed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/login"
        ]
      }
    },
    "/index.php/ocm-provider": {
      "get": {
        "operationId": "core-ocm-discovery",
        "summary": "generate a OCMProvider with local data and send it as DataResponse. This replaces the old PHP file ocm-provider/index.php",
        "responses": {
          "200": {
            "description": "OCM Provider details returned",
            "headers": {
              "X-NEXTCLOUD-OCM-PROVIDERS": {
                "schema": {
                  "type": "boolean",
                  "const": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "apiVersion": {
                      "type": "string"
                    },
                    "endPoint": {
                      "type": "string"
                    },
                    "resourceTypes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "shareTypes",
                          "protocols"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "shareTypes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "protocols": {
                            "type": "object",
                            "properties": {
                              "webdav": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "webdav"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "enabled",
                    "apiVersion",
                    "endPoint",
                    "resourceTypes"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "OCM not supported",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/ocm"
        ]
      }
    },
    "/index.php/core/preview.png": {
      "get": {
        "operationId": "core-preview-get-preview",
        "summary": "Get a preview by file path",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "Path of the file",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "Width of the preview. A width of -1 will use the original image width.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Height of the preview. A height of -1 will use the original image height.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "a",
            "in": "query",
            "description": "Preserve the aspect ratio",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "forceIcon",
            "in": "query",
            "description": "Force returning an icon",
            "schema": {
              "type": "integer",
              "default": 1,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "How to crop the image",
            "schema": {
              "type": "string",
              "default": "fill",
              "enum": [
                "fill",
                "cover"
              ]
            }
          },
          {
            "name": "mimeFallback",
            "in": "query",
            "description": "Whether to fallback to the mime icon if no preview is available",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "303": {
            "description": "Redirect to the mime icon url if mimeFallback is true",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "Getting preview is not allowed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/preview"
        ]
      }
    },
    "/index.php/core/preview": {
      "get": {
        "operationId": "core-preview-get-preview-by-file-id",
        "summary": "Get a preview by file ID",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "description": "ID of the file",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": -1
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "Width of the preview. A width of -1 will use the original image width.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Height of the preview. A height of -1 will use the original image height.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "a",
            "in": "query",
            "description": "Preserve the aspect ratio",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "forceIcon",
            "in": "query",
            "description": "Force returning an icon",
            "schema": {
              "type": "integer",
              "default": 1,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "How to crop the image",
            "schema": {
              "type": "string",
              "default": "fill",
              "enum": [
                "fill",
                "cover"
              ]
            }
          },
          {
            "name": "mimeFallback",
            "in": "query",
            "description": "Whether to fallback to the mime icon if no preview is available",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "303": {
            "description": "Redirect to the mime icon url if mimeFallback is true",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "Getting preview is not allowed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/preview"
        ]
      }
    },
    "/index.php/core/mimeicon": {
      "get": {
        "operationId": "core-preview-get-mime-icon-url",
        "summary": "Get a preview by mime",
        "parameters": [
          {
            "name": "mime",
            "in": "query",
            "description": "Mime type",
            "schema": {
              "type": "string",
              "default": "application/octet-stream"
            }
          }
        ],
        "responses": {
          "303": {
            "description": "The mime icon url",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/preview"
        ]
      }
    },
    "/index.php/core/references/preview/{referenceId}": {
      "get": {
        "operationId": "core-reference-preview",
        "summary": "Get a preview for a reference",
        "parameters": [
          {
            "name": "referenceId",
            "in": "path",
            "description": "the reference cache key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Reference not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/reference"
        ]
      }
    },
    "/index.php/core/wipe/check": {
      "post": {
        "operationId": "core-wipe-check-wipe",
        "summary": "Check if the device should be wiped",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "App password",
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device should be wiped",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wipe": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "wipe"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Device should not be wiped",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/wipe"
        ]
      }
    },
    "/index.php/core/wipe/success": {
      "post": {
        "operationId": "core-wipe-wipe-done",
        "summary": "Finish the wipe",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "App password",
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wipe finished successfully",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Device should not be wiped",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "core/wipe"
        ]
      }
    },
    "/status.php": {
      "get": {
        "operationId": "core-get-status",
        "responses": {
          "200": {
            "description": "Status returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreStatus"
                }
              }
            }
          }
        },
        "tags": [
          "core"
        ]
      }
    },
    "/index.php/ocm/shares": {
      "post": {
        "operationId": "cloud_federation_api-request_handler-add-share",
        "summary": "Add share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shareWith": {
                    "description": "The user who the share will be shared with",
                    "type": "string"
                  },
                  "name": {
                    "description": "The resource name (e.g. document.odt)",
                    "type": "string"
                  },
                  "description": {
                    "description": "Share description",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "providerId": {
                    "description": "Resource UID on the provider side",
                    "type": "string"
                  },
                  "owner": {
                    "description": "Provider specific UID of the user who owns the resource",
                    "type": "string"
                  },
                  "ownerDisplayName": {
                    "description": "Display name of the user who shared the item",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sharedBy": {
                    "description": "Provider specific UID of the user who shared the resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sharedByDisplayName": {
                    "description": "Display name of the user who shared the resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "protocol": {
                    "description": "e,.g. ['name' => 'webdav', 'options' => ['username' => 'john', 'permissions' => 31]]",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "options"
                    ]
                  },
                  "shareType": {
                    "description": "'group' or 'user' share",
                    "type": "string"
                  },
                  "resourceType": {
                    "description": "'file', 'calendar',...",
                    "type": "string"
                  }
                },
                "required": [
                  "shareWith",
                  "name",
                  "providerId",
                  "owner",
                  "protocol",
                  "shareType",
                  "resourceType"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The notification was successfully received. The display name of the recipient might be returned in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiAddShare"
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters, e.g. when `shareWith` is not found or required properties are missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiValidationError"
                }
              }
            }
          },
          "501": {
            "description": "Share type or the resource type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiError"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "cloud_federation_api/request_handler"
        ]
      }
    },
    "/index.php/ocm/notifications": {
      "post": {
        "operationId": "cloud_federation_api-request_handler-receive-notification",
        "summary": "Send a notification about an existing share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notificationType": {
                    "description": "Notification type, e.g. SHARE_ACCEPTED",
                    "type": "string"
                  },
                  "resourceType": {
                    "description": "calendar, file, contact,...",
                    "type": "string"
                  },
                  "providerId": {
                    "description": "ID of the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "notification": {
                    "description": "The actual payload of the notification",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "notificationType",
                  "resourceType"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The notification was successfully received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters, e.g. when `type` is invalid or missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiValidationError"
                }
              }
            }
          },
          "403": {
            "description": "Getting resource is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiError"
                }
              }
            }
          },
          "501": {
            "description": "The resource type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudFederationApiError"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "cloud_federation_api/request_handler"
        ]
      }
    },
    "/ocs/v2.php/apps/dashboard/api/v1/widget-items": {
      "get": {
        "operationId": "dashboard-dashboard_api-get-widget-items",
        "summary": "Get the items for the widgets",
        "parameters": [
          {
            "name": "sinceIds",
            "in": "query",
            "description": "Array indexed by widget Ids, contains date/id from which we want the new items",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of result items per widget",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 7,
              "maximum": 30,
              "minimum": 1
            }
          },
          {
            "name": "widgets[]",
            "in": "query",
            "description": "Limit results to specific widgets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Widget items returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/DashboardWidgetItem"
                            }
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      }
    },
    "/ocs/v2.php/apps/dashboard/api/v2/widget-items": {
      "get": {
        "operationId": "dashboard-dashboard_api-get-widget-items-v2",
        "summary": "Get the items for the widgets",
        "parameters": [
          {
            "name": "sinceIds",
            "in": "query",
            "description": "Array indexed by widget Ids, contains date/id from which we want the new items",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of result items per widget, not more than 30 are allowed",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 7,
              "maximum": 30,
              "minimum": 1
            }
          },
          {
            "name": "widgets[]",
            "in": "query",
            "description": "Limit results to specific widgets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Widget items returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/DashboardWidgetItems"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      }
    },
    "/ocs/v2.php/apps/dashboard/api/v1/widgets": {
      "get": {
        "operationId": "dashboard-dashboard_api-get-widgets",
        "summary": "Get the widgets",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Widgets returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/DashboardWidget"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      }
    },
    "/ocs/v2.php/apps/dashboard/api/v3/layout": {
      "get": {
        "operationId": "dashboard-dashboard_api-get-layout",
        "summary": "Get the layout",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Layout returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "layout": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "layout"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      },
      "post": {
        "operationId": "dashboard-dashboard_api-update-layout",
        "summary": "Update the layout",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "layout": {
                    "description": "The new layout",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "layout"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Statuses updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "layout": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "layout"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      }
    },
    "/ocs/v2.php/apps/dashboard/api/v3/statuses": {
      "get": {
        "operationId": "dashboard-dashboard_api-get-statuses",
        "summary": "Get the statuses",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statuses returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "statuses": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "statuses"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      },
      "post": {
        "operationId": "dashboard-dashboard_api-update-statuses",
        "summary": "Update the statuses",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statuses": {
                    "description": "The new statuses",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "statuses"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Statuses updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "statuses": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "statuses"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dashboard/dashboard_api"
        ]
      }
    },
    "/ocs/v2.php/apps/dav/api/v1/direct": {
      "post": {
        "operationId": "dav-direct-get-url",
        "summary": "Get a direct link to a file",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": {
                    "description": "ID of the file",
                    "type": "integer",
                    "format": "int64"
                  },
                  "expirationTime": {
                    "description": "Duration until the link expires",
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "required": [
                  "fileId",
                  "expirationTime"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Direct link returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Getting direct link is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Missing permissions to get direct link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/direct"
        ]
      }
    },
    "/ocs/v2.php/apps/dav/api/v1/events/upcoming": {
      "get": {
        "operationId": "dav-upcoming_events-get-events",
        "summary": "Get information about upcoming events",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "location/URL to filter by",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upcoming events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "events": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/DavUpcomingEvent"
                              }
                            }
                          },
                          "required": [
                            "events"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "When not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/upcoming_events"
        ]
      }
    },
    "/ocs/v2.php/apps/dav/api/v1/outOfOffice/{userId}/now": {
      "get": {
        "operationId": "dav-out_of_office-get-current-out-of-office-data",
        "summary": "Get the currently configured out-of-office data of a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user id to get out-of-office data for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Out-of-office data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/DavCurrentOutOfOfficeData"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No out-of-office data was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/out_of_office"
        ]
      }
    },
    "/ocs/v2.php/apps/dav/api/v1/outOfOffice/{userId}": {
      "get": {
        "operationId": "dav-out_of_office-get-out-of-office",
        "summary": "Get the configured out-of-office data of a user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user id to get out-of-office data for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Out-of-office data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/DavOutOfOfficeData"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No out-of-office data was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/out_of_office"
        ]
      },
      "post": {
        "operationId": "dav-out_of_office-set-out-of-office",
        "summary": "Set out-of-office absence",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstDay": {
                    "description": "First day of the absence in format `YYYY-MM-DD`",
                    "type": "string"
                  },
                  "lastDay": {
                    "description": "Last day of the absence in format `YYYY-MM-DD`",
                    "type": "string"
                  },
                  "status": {
                    "description": "Short text that is set as user status during the absence",
                    "type": "string"
                  },
                  "message": {
                    "description": "Longer multiline message that is shown to others during the absence",
                    "type": "string"
                  },
                  "replacementUserId": {
                    "description": "User id of the replacement user",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "replacementUserDisplayName": {
                    "description": "Display name of the replacement user",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "firstDay",
                  "lastDay",
                  "status",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Absence data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/DavOutOfOfficeData"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "When the first day is not before the last day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "error": {
                              "type": "string",
                              "const": "firstDay"
                            }
                          },
                          "required": [
                            "error"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "When the user is not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "When the replacementUserId was provided but replacement user was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/out_of_office"
        ]
      },
      "delete": {
        "operationId": "dav-out_of_office-clear-out-of-office",
        "summary": "Clear the out-of-office",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When the absence was cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "When the user is not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "dav/out_of_office"
        ]
      }
    },
    "/index.php/apps/federatedfilesharing/createFederatedShare": {
      "post": {
        "operationId": "federatedfilesharing-mount_public_link-create-federated-share",
        "summary": "send federated share to a user of a public link",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shareWith": {
                    "description": "Username to share with",
                    "type": "string"
                  },
                  "token": {
                    "description": "Token of the share",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the share",
                    "type": "string",
                    "default": ""
                  }
                },
                "required": [
                  "shareWith",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remote URL returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "remoteUrl": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "remoteUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Creating share is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/mount_public_link"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-create-share",
        "summary": "create a new share",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remote": {
                    "description": "Address of the remote",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the shared resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "owner": {
                    "description": "Display name of the receiver",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sharedBy": {
                    "description": "Display name of the sender",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "shareWith": {
                    "description": "ID of the user that receives the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "remoteId": {
                    "description": "ID of the remote",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "sharedByFederatedId": {
                    "description": "Federated ID of the sender",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ownerFederatedId": {
                    "description": "Federated ID of the receiver",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/reshare": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-re-share",
        "summary": "create re-share on behalf of another user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "shareWith": {
                    "description": "ID of the user that receives the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "remoteId": {
                    "description": "ID of the remote",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remote share returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "remoteId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "token",
                            "remoteId"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Re-sharing is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/permissions": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-update-permissions",
        "summary": "update share information to keep federated re-shares in sync",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "permissions": {
                    "description": "New permissions",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissions updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Updating permissions is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/accept": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-accept-share",
        "summary": "accept server-to-server share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the remote share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/decline": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-decline-share",
        "summary": "decline server-to-server share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the remote share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share declined successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/unshare": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-unshare",
        "summary": "remove server-to-server share if it was unshared by the owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share unshared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/revoke": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-revoke",
        "summary": "federated share was revoked, either by the owner or the re-sharer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Revoking the share is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/ocs/v2.php/cloud/shares/{id}/move": {
      "post": {
        "operationId": "federatedfilesharing-request_handler-move",
        "summary": "change the owner of a server-to-server share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "description": "Shared secret between servers",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "remote": {
                    "description": "Address of the remote",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "remote_id": {
                    "description": "ID of the remote",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share moved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "remote": {
                              "type": "string"
                            },
                            "owner": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "remote",
                            "owner"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Moving share is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "federatedfilesharing/request_handler"
        ]
      }
    },
    "/index.php/apps/files/api/v1/thumbnail/{x}/{y}/{file}": {
      "get": {
        "operationId": "files-api-get-thumbnail",
        "summary": "Gets a thumbnail of the specified file",
        "parameters": [
          {
            "name": "x",
            "in": "path",
            "description": "Width of the thumbnail",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "y",
            "in": "path",
            "description": "Height of the thumbnail",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "file",
            "in": "path",
            "description": "URL-encoded filename",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thumbnail returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Getting thumbnail is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/api"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/directEditing": {
      "get": {
        "operationId": "files-direct_editing-info",
        "summary": "Get the direct editing capabilities",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Direct editing capabilities returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "editors": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "mimetypes",
                                  "optionalMimetypes",
                                  "secure"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "mimetypes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "optionalMimetypes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "secure": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "creators": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "editor",
                                  "name",
                                  "extension",
                                  "templates",
                                  "mimetypes"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "editor": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "extension": {
                                    "type": "string"
                                  },
                                  "templates": {
                                    "type": "boolean"
                                  },
                                  "mimetypes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "editors",
                            "creators"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/direct_editing"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/directEditing/templates/{editorId}/{creatorId}": {
      "get": {
        "operationId": "files-direct_editing-templates",
        "summary": "Get the templates for direct editing",
        "parameters": [
          {
            "name": "editorId",
            "in": "path",
            "description": "ID of the editor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creatorId",
            "in": "path",
            "description": "ID of the creator",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "templates": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "title",
                                  "preview",
                                  "extension",
                                  "mimetype"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "preview": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "extension": {
                                    "type": "string"
                                  },
                                  "mimetype": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "templates"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/direct_editing"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/directEditing/open": {
      "post": {
        "operationId": "files-direct_editing-open",
        "summary": "Open a file for direct editing",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "description": "Path of the file",
                    "type": "string"
                  },
                  "editorId": {
                    "description": "ID of the editor",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fileId": {
                    "description": "ID of the file",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL for direct editing returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Opening file is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/direct_editing"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/directEditing/create": {
      "post": {
        "operationId": "files-direct_editing-create",
        "summary": "Create a file for direct editing",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "description": "Path of the file",
                    "type": "string"
                  },
                  "editorId": {
                    "description": "ID of the editor",
                    "type": "string"
                  },
                  "creatorId": {
                    "description": "ID of the creator",
                    "type": "string"
                  },
                  "templateId": {
                    "description": "ID of the template",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "path",
                  "editorId",
                  "creatorId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL for direct editing returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Opening file is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/direct_editing"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/templates": {
      "get": {
        "operationId": "files-template-list",
        "summary": "List the available templates",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available templates returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesTemplateFileCreatorWithTemplates"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/template"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/templates/create": {
      "post": {
        "operationId": "files-template-create",
        "summary": "Create a template",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "description": "Path of the file",
                    "type": "string"
                  },
                  "templatePath": {
                    "description": "Name of the template",
                    "type": "string",
                    "default": ""
                  },
                  "templateType": {
                    "description": "Type of the template",
                    "type": "string",
                    "default": "user"
                  },
                  "templateFields": {
                    "description": "Fields of the template",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FilesTemplateField"
                    },
                    "default": []
                  }
                },
                "required": [
                  "filePath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesTemplateFile"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Creating template is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/template"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/templates/path": {
      "post": {
        "operationId": "files-template-path",
        "summary": "Initialize the template directory",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templatePath": {
                    "description": "Path of the template directory",
                    "type": "string",
                    "default": ""
                  },
                  "copySystemTemplates": {
                    "description": "Whether to copy the system templates to the template directory",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template directory initialized successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "template_path": {
                              "type": "string"
                            },
                            "templates": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/FilesTemplateFileCreator"
                              }
                            }
                          },
                          "required": [
                            "template_path",
                            "templates"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Initializing the template directory is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/template"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/transferownership": {
      "post": {
        "operationId": "files-transfer_ownership-transfer",
        "summary": "Transfer the ownership to another user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipient": {
                    "description": "Username of the recipient",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path of the file",
                    "type": "string"
                  }
                },
                "required": [
                  "recipient",
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ownership transferred successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Transferring ownership is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Transferring ownership is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/transfer_ownership"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/transferownership/{id}": {
      "post": {
        "operationId": "files-transfer_ownership-accept",
        "summary": "Accept an ownership transfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ownership transfer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership transfer accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Accepting ownership transfer is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Ownership transfer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/transfer_ownership"
        ]
      },
      "delete": {
        "operationId": "files-transfer_ownership-reject",
        "summary": "Reject an ownership transfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the ownership transfer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership transfer rejected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Rejecting ownership transfer is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Ownership transfer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/transfer_ownership"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/openlocaleditor": {
      "post": {
        "operationId": "files-open_local_editor-create",
        "summary": "Create a local editor",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "description": "Path of the file",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Local editor returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "pathHash": {
                              "type": "string"
                            },
                            "expirationTime": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "token": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "userId",
                            "pathHash",
                            "expirationTime",
                            "token"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/open_local_editor"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/openlocaleditor/{token}": {
      "post": {
        "operationId": "files-open_local_editor-validate",
        "summary": "Validate a local editor",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of the local editor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "description": "Path of the file",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Local editor validated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string"
                            },
                            "pathHash": {
                              "type": "string"
                            },
                            "expirationTime": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "token": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "userId",
                            "pathHash",
                            "expirationTime",
                            "token"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Local editor not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/open_local_editor"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/folder-tree": {
      "get": {
        "operationId": "files-api-get-folder-tree",
        "summary": "Returns the folder tree of the user",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "The path relative to the user folder",
            "schema": {
              "type": "string",
              "default": "/"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "The depth of the tree",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder tree returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilesFolderTree"
                }
              }
            }
          },
          "400": {
            "description": "Invalid folder path",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/api"
        ]
      }
    },
    "/ocs/v2.php/apps/files/api/v1/convert": {
      "post": {
        "operationId": "files-conversion_api-convert",
        "summary": "Converts a file from one MIME type to another",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileId": {
                    "description": "ID of the file to be converted",
                    "type": "integer",
                    "format": "int64"
                  },
                  "targetMimeType": {
                    "description": "The MIME type to which you want to convert the file",
                    "type": "string"
                  },
                  "destination": {
                    "description": "The target path of the converted file. Written to a temporary file if left empty",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "fileId",
                  "targetMimeType"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File was converted and written to the destination or temporary file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "fileId": {
                              "type": "integer",
                              "format": "int64"
                            }
                          },
                          "required": [
                            "path",
                            "fileId"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The file to be converted was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files/conversion_api"
        ]
      }
    },
    "/ocs/v2.php/apps/files_external/api/v1/mounts": {
      "get": {
        "operationId": "files_external-api-get-user-mounts",
        "summary": "Get the mount points visible for this user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User mounts returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesExternalMount"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_external/api"
        ]
      }
    },
    "/ocs/v2.php/apps/files_reminders/api/v{version}/{fileId}": {
      "get": {
        "operationId": "files_reminders-api-get",
        "summary": "Get a reminder",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^1$"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "dueDate": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "dueDate"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_reminders/api"
        ]
      },
      "put": {
        "operationId": "files_reminders-api-set",
        "summary": "Set a reminder",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^1$"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "description": "ISO 8601 formatted date time string",
                    "type": "string"
                  }
                },
                "required": [
                  "dueDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reminder updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Reminder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Creating reminder is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_reminders/api"
        ]
      },
      "delete": {
        "operationId": "files_reminders-api-remove",
        "summary": "Remove a reminder",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^1$"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Reminder not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_reminders/api"
        ]
      }
    },
    "/index.php/s/{token}/preview": {
      "get": {
        "operationId": "files_sharing-public_preview-direct-link",
        "summary": "Get a direct link preview for a shared file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "Getting preview is not allowed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Share or preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/public_preview"
        ]
      }
    },
    "/index.php/apps/files_sharing/publicpreview/{token}": {
      "get": {
        "operationId": "files_sharing-public_preview-get-preview",
        "summary": "Get a preview for a shared file",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "File in the share",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "Width of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Height of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "a",
            "in": "query",
            "description": "Whether to not crop the preview",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "Getting preview is not allowed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Share or preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/public_preview"
        ]
      }
    },
    "/index.php/apps/files_sharing/shareinfo": {
      "post": {
        "operationId": "files_sharing-share_info-info",
        "summary": "Get the info about a share",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "t": {
                    "description": "Token of the share",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "dir": {
                    "description": "Subdirectory to get info about",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "depth": {
                    "description": "Maximum depth to get info about",
                    "type": "integer",
                    "format": "int64",
                    "default": -1
                  }
                },
                "required": [
                  "t"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share info returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilesSharingShareInfo"
                }
              }
            }
          },
          "403": {
            "description": "Getting share info is not allowed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/share_info"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares": {
      "get": {
        "operationId": "files_sharing-shareapi-get-shares",
        "summary": "Get shares of the current user",
        "parameters": [
          {
            "name": "shared_with_me",
            "in": "query",
            "description": "Only get shares with the current user",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "reshares",
            "in": "query",
            "description": "Only get shares by the current user and reshares",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "subfiles",
            "in": "query",
            "description": "Only get all shares in a folder",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "Get shares for a specific path",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "include_tags",
            "in": "query",
            "description": "Include tags in the share",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The folder was not found or is inaccessible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      },
      "post": {
        "operationId": "files_sharing-shareapi-create-share",
        "summary": "Create a share",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "description": "Path of the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "permissions": {
                    "description": "Permissions for the share",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "shareType": {
                    "description": "Type of the share",
                    "type": "integer",
                    "format": "int64",
                    "default": -1
                  },
                  "shareWith": {
                    "description": "The entity this should be shared with",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "publicUpload": {
                    "description": "If public uploading is allowed (deprecated)",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "true",
                      "false"
                    ]
                  },
                  "password": {
                    "description": "Password for the share",
                    "type": "string",
                    "default": ""
                  },
                  "sendPasswordByTalk": {
                    "description": "Send the password for the share over Talk",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "expireDate": {
                    "description": "The expiry date of the share in the user's timezone at 00:00. If $expireDate is not supplied or set to `null`, the system default will be used.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "note": {
                    "description": "Note for the share",
                    "type": "string",
                    "default": ""
                  },
                  "label": {
                    "description": "Label for the share (only used in link and email)",
                    "type": "string",
                    "default": ""
                  },
                  "attributes": {
                    "description": "Additional attributes for the share",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sendMail": {
                    "description": "Send a mail to the recipient",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "false",
                      "true"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesSharingShare"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Unknown share type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Creating the share is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Creating the share failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/inherited": {
      "get": {
        "operationId": "files_sharing-shareapi-get-inherited-shares",
        "summary": "Get all shares relative to a file, including parent folders shares rights",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "Path all shares will be relative to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The given path is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/pending": {
      "get": {
        "operationId": "files_sharing-shareapi-pending-shares",
        "summary": "Get all shares that are still pending",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pending shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/{id}": {
      "get": {
        "operationId": "files_sharing-shareapi-get-share",
        "summary": "Get a specific share by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_tags",
            "in": "query",
            "description": "Include tags in the share",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      },
      "put": {
        "operationId": "files_sharing-shareapi-update-share",
        "summary": "Update a share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "description": "New permissions",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "password": {
                    "description": "New password",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sendPasswordByTalk": {
                    "description": "New condition if the password should be send over Talk",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "publicUpload": {
                    "description": "New condition if public uploading is allowed",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "expireDate": {
                    "description": "New expiry date",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "note": {
                    "description": "New note",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "label": {
                    "description": "New label",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "hideDownload": {
                    "description": "New condition if the download should be hidden",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "attributes": {
                    "description": "New additional attributes",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sendMail": {
                    "description": "if the share should be send by mail. Considering the share already exists, no mail will be send after the share is updated. You will have to use the sendMail action to send the mail.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "token": {
                    "description": "New token",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Share updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesSharingShare"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Share could not be updated because the requested changes are invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Missing permissions to update the share",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      },
      "delete": {
        "operationId": "files_sharing-shareapi-delete-share",
        "summary": "Delete a share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Missing permissions to delete the share",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/{id}/send-email": {
      "post": {
        "operationId": "files_sharing-shareapi-send-share-email",
        "summary": "Send a mail notification again for a share. The mail_send option must be enabled for the given share.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the share ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "description": "the password to check against. Necessary for password protected shares.",
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email notification was sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to send mail notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/shares/pending/{id}": {
      "post": {
        "operationId": "files_sharing-shareapi-accept-share",
        "summary": "Accept a share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Share could not be accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/deletedshares": {
      "get": {
        "operationId": "files_sharing-deleted_shareapi-index",
        "summary": "Get a list of all deleted shares",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingDeletedShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/deleted_shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/deletedshares/{id}": {
      "post": {
        "operationId": "files_sharing-deleted_shareapi-undelete",
        "summary": "Undelete a deleted share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share undeleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/deleted_shareapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/sharees": {
      "get": {
        "operationId": "files_sharing-shareesapi-search",
        "summary": "Search for sharees",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "itemType",
            "in": "query",
            "description": "Limit to specific item types",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page offset for searching",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Limit amount of search results per page",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 200
            }
          },
          {
            "name": "shareType",
            "in": "query",
            "description": "Limit to specific share types",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int64"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              ]
            }
          },
          {
            "name": "lookup",
            "in": "query",
            "description": "If a global lookup should be performed too",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sharees search result returned",
            "headers": {
              "Link": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesSharingShareesSearchResult"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid search parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareesapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/sharees_recommended": {
      "get": {
        "operationId": "files_sharing-shareesapi-find-recommended",
        "summary": "Find recommended sharees",
        "parameters": [
          {
            "name": "itemType",
            "in": "query",
            "description": "Limit to specific item types",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shareType",
            "in": "query",
            "description": "Limit to specific share types",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "type": "integer",
                  "format": "int64"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommended sharees returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesSharingShareesRecommendedResult"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareesapi"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares": {
      "get": {
        "operationId": "files_sharing-remote-get-shares",
        "summary": "Get a list of accepted remote shares",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted remote shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingRemoteShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/pending": {
      "get": {
        "operationId": "files_sharing-remote-get-open-shares",
        "summary": "Get list of pending remote shares",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pending remote shares returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FilesSharingRemoteShare"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/pending/{id}": {
      "post": {
        "operationId": "files_sharing-remote-accept-share",
        "summary": "Accept a remote share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      },
      "delete": {
        "operationId": "files_sharing-remote-decline-share",
        "summary": "Decline a remote share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share declined successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/remote_shares/{id}": {
      "get": {
        "operationId": "files_sharing-remote-get-share",
        "summary": "Get info of a remote share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/FilesSharingRemoteShare"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      },
      "delete": {
        "operationId": "files_sharing-remote-unshare",
        "summary": "Unshare a remote share",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the share",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share unshared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unsharing is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Share not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/remote"
        ]
      }
    },
    "/ocs/v2.php/apps/files_sharing/api/v1/token": {
      "get": {
        "operationId": "files_sharing-shareapi-generate-token",
        "summary": "Get a unique share token",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "token"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_sharing/shareapi"
        ]
      }
    },
    "/index.php/apps/files_trashbin/preview": {
      "get": {
        "operationId": "files_trashbin-preview-get-preview",
        "summary": "Get the preview for a file",
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "description": "ID of the file",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": -1
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "Width of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Height of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 32
            }
          },
          {
            "name": "a",
            "in": "query",
            "description": "Whether to not crop the preview",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_trashbin/preview"
        ]
      }
    },
    "/index.php/apps/files_versions/preview": {
      "get": {
        "operationId": "files_versions-preview-get-preview",
        "summary": "Get the preview for a file version",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "Path of the file",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "x",
            "in": "query",
            "description": "Width of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 44
            }
          },
          {
            "name": "y",
            "in": "query",
            "description": "Height of the preview",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 44
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the file to get the preview for",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Getting preview is not possible",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Preview not found",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "files_versions/preview"
        ]
      }
    },
    "/index.php/apps/oauth2/authorize": {
      "get": {
        "operationId": "oauth2-login_redirector-authorize",
        "summary": "Authorize the user",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Client ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State of the flow",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "in": "query",
            "description": "Response type for the flow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "303": {
            "description": "Redirect to login URL",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "oauth2/login_redirector"
        ]
      }
    },
    "/index.php/apps/oauth2/api/v1/token": {
      "post": {
        "operationId": "oauth2-oauth_api-get-token",
        "summary": "Get a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "description": "Token type that should be granted",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code of the flow",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "refresh_token": {
                    "description": "Refresh token",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_id": {
                    "description": "Client ID",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "client_secret": {
                    "description": "Client secret",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "grant_type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "expires_in",
                    "refresh_token",
                    "user_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Getting token is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "oauth2/oauth_api"
        ]
      }
    },
    "/ocs/v2.php/cloud/groups": {
      "get": {
        "operationId": "provisioning_api-groups-get-groups",
        "summary": "Get a list of groups",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of groups returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for searching for groups",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Groups returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "groups"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/groups"
        ]
      }
    },
    "/ocs/v2.php/cloud/groups/details": {
      "get": {
        "operationId": "provisioning_api-groups-get-groups-details",
        "summary": "Get a list of groups details",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of groups returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for searching for groups",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Groups details returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProvisioningApiGroupDetails"
                              }
                            }
                          },
                          "required": [
                            "groups"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/groups"
        ]
      }
    },
    "/ocs/v2.php/cloud/groups/{groupId}/users": {
      "get": {
        "operationId": "provisioning_api-groups-get-group-users",
        "summary": "Get a list of users in the specified group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User IDs returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Missing permissions to get users in the group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/groups"
        ]
      }
    },
    "/ocs/v2.php/cloud/groups/{groupId}/users/details": {
      "get": {
        "operationId": "provisioning_api-groups-get-group-users-details",
        "summary": "Get a list of users details in the specified group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of groups returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for searching for groups",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group users details returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "$ref": "#/components/schemas/ProvisioningApiUserDetails"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/groups"
        ]
      }
    },
    "/ocs/v2.php/cloud/groups/{groupId}": {
      "get": {
        "operationId": "provisioning_api-groups-get-group",
        "summary": "Get a list of users in the specified group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group users returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/groups"
        ]
      }
    },
    "/ocs/v2.php/cloud/users": {
      "get": {
        "operationId": "provisioning_api-users-get-users",
        "summary": "Get a list of users",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of groups returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for searching for groups",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      },
      "post": {
        "operationId": "provisioning_api-users-add-user",
        "summary": "Create a new user",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userid": {
                    "description": "ID of the user",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the user",
                    "type": "string",
                    "default": ""
                  },
                  "displayName": {
                    "description": "Display name of the user",
                    "type": "string",
                    "default": ""
                  },
                  "email": {
                    "description": "Email of the user",
                    "type": "string",
                    "default": ""
                  },
                  "groups": {
                    "description": "Groups of the user",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "subadmin": {
                    "description": "Groups where the user is subadmin",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "quota": {
                    "description": "Quota of the user",
                    "type": "string",
                    "default": ""
                  },
                  "language": {
                    "description": "Language of the user",
                    "type": "string",
                    "default": ""
                  },
                  "manager": {
                    "description": "Manager of the user",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "userid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Missing permissions to make user subadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/details": {
      "get": {
        "operationId": "provisioning_api-users-get-users-details",
        "summary": "Get a list of users and their details",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of groups returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for searching for groups",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users details returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "$ref": "#/components/schemas/ProvisioningApiUserDetails"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/disabled": {
      "get": {
        "operationId": "provisioning_api-users-get-disabled-users-details",
        "summary": "Get the list of disabled users and their details",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Text to search for",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the amount of users returned",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disabled users details returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "$ref": "#/components/schemas/ProvisioningApiUserDetails"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "id"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "users"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/search/by-phone": {
      "post": {
        "operationId": "provisioning_api-users-search-by-phone-numbers",
        "summary": "Search users by their phone numbers",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "description": "Location of the phone number (for country code)",
                    "type": "string"
                  },
                  "search": {
                    "description": "Phone numbers to search for",
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "location",
                  "search"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}": {
      "get": {
        "operationId": "provisioning_api-users-get-user",
        "summary": "Get the details of a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/ProvisioningApiUserDetails"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      },
      "put": {
        "operationId": "provisioning_api-users-edit-user",
        "summary": "Update a value of the user's details",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key that will be updated",
                    "type": "string"
                  },
                  "value": {
                    "description": "New value for the key",
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User value edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      },
      "delete": {
        "operationId": "provisioning_api-users-delete-user",
        "summary": "Delete a user",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/user": {
      "get": {
        "operationId": "provisioning_api-users-get-current-user",
        "summary": "Get the details of the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current user returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/ProvisioningApiUserDetails"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/user/fields": {
      "get": {
        "operationId": "provisioning_api-users-get-editable-fields",
        "summary": "Get a list of fields that are editable for the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editable fields returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/user/fields/{userId}": {
      "get": {
        "operationId": "provisioning_api-users-get-editable-fields-for-user",
        "summary": "Get a list of fields that are editable for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editable fields for user returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/{collectionName}": {
      "put": {
        "operationId": "provisioning_api-users-edit-user-multi-value",
        "summary": "Update multiple values of the user's details",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Collection to update",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(?!enable$|disable$)[a-zA-Z0-9_]*$"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key that will be updated",
                    "type": "string"
                  },
                  "value": {
                    "description": "New value for the key",
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User values edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/wipe": {
      "post": {
        "operationId": "provisioning_api-users-wipe-user-devices",
        "summary": "Wipe all devices of a user",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wiped all user devices successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/enable": {
      "put": {
        "operationId": "provisioning_api-users-enable-user",
        "summary": "Enable a user",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User enabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/disable": {
      "put": {
        "operationId": "provisioning_api-users-disable-user",
        "summary": "Disable a user",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User disabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/groups": {
      "get": {
        "operationId": "provisioning_api-users-get-users-groups",
        "summary": "Get a list of groups the user belongs to",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users groups returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "groups"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      },
      "post": {
        "operationId": "provisioning_api-users-add-to-group",
        "summary": "Add a user to a group",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupid": {
                    "description": "ID of the group",
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added to group successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      },
      "delete": {
        "operationId": "provisioning_api-users-remove-from-group",
        "summary": "Remove a user from a group",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User removed from group successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/cloud/users/{userId}/welcome": {
      "post": {
        "operationId": "provisioning_api-users-resend-welcome-message",
        "summary": "Resend the welcome message",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID if the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resent welcome message successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/users"
        ]
      }
    },
    "/ocs/v2.php/apps/provisioning_api/api/v1/config/apps/{app}/{key}": {
      "post": {
        "operationId": "provisioning_api-app_config-set-value",
        "summary": "Update the config value of an app",
        "description": "This endpoint requires password confirmation",
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "New value for the key",
                    "type": "string"
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Value updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "App or key is not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "message"
                              ]
                            }
                          },
                          "required": [
                            "data"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/app_config"
        ]
      }
    },
    "/ocs/v2.php/apps/provisioning_api/api/v1/config/users/{appId}/{configKey}": {
      "post": {
        "operationId": "provisioning_api-preferences-set-preference",
        "summary": "Update a preference value of an app",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configKey",
            "in": "path",
            "description": "Key of the preference",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "configValue": {
                    "description": "New value",
                    "type": "string"
                  }
                },
                "required": [
                  "configValue"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preference updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Preference invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/preferences"
        ]
      },
      "delete": {
        "operationId": "provisioning_api-preferences-delete-preference",
        "summary": "Delete a preference for an app",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configKey",
            "in": "path",
            "description": "Key to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Preference invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/preferences"
        ]
      }
    },
    "/ocs/v2.php/apps/provisioning_api/api/v1/config/users/{appId}": {
      "post": {
        "operationId": "provisioning_api-preferences-set-multiple-preferences",
        "summary": "Update multiple preference values of an app",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "configs": {
                    "description": "Key-value pairs of the preferences",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "configs"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preferences updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Preference invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/preferences"
        ]
      },
      "delete": {
        "operationId": "provisioning_api-preferences-delete-multiple-preference",
        "summary": "Delete multiple preferences for an app",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configKeys[]",
            "in": "query",
            "description": "Keys to delete",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preferences deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Preference invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "provisioning_api/preferences"
        ]
      }
    },
    "/ocs/v2.php/settings/api/declarative/value": {
      "post": {
        "operationId": "settings-declarative_settings-set-value",
        "summary": "Sets a declarative settings value",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app": {
                    "description": "ID of the app",
                    "type": "string"
                  },
                  "formId": {
                    "description": "ID of the form",
                    "type": "string"
                  },
                  "fieldId": {
                    "description": "ID of the field",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value to be saved",
                    "type": "object"
                  }
                },
                "required": [
                  "app",
                  "formId",
                  "fieldId",
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Value set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid arguments to save value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Not logged in or not an admin user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "settings/declarative_settings"
        ]
      }
    },
    "/ocs/v2.php/settings/api/declarative/forms": {
      "get": {
        "operationId": "settings-declarative_settings-get-forms",
        "summary": "Gets all declarative forms with the values prefilled.",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forms returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SettingsDeclarativeForm"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "settings/declarative_settings"
        ]
      }
    },
    "/index.php/apps/theming/theme/{themeId}.css": {
      "get": {
        "operationId": "theming-theming-get-theme-stylesheet",
        "summary": "Get the CSS stylesheet for a theme",
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "ID of the theme",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plain",
            "in": "query",
            "description": "Let the browser decide the CSS priority",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "withCustomCss",
            "in": "query",
            "description": "Include custom CSS",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stylesheet returned",
            "content": {
              "text/css": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Theme not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/theming"
        ]
      }
    },
    "/index.php/apps/theming/image/{key}": {
      "get": {
        "operationId": "theming-theming-get-image",
        "summary": "Get an image",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Key of the image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useSvg",
            "in": "query",
            "description": "Return image as SVG",
            "schema": {
              "type": "integer",
              "default": 1,
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Image not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/theming"
        ]
      }
    },
    "/index.php/apps/theming/manifest/{app}": {
      "get": {
        "operationId": "theming-theming-get-manifest",
        "summary": "Get the manifest for an app",
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string",
              "default": "core"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Manifest returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "start_url": {
                      "type": "string"
                    },
                    "theme_color": {
                      "type": "string"
                    },
                    "background_color": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "icons": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "src",
                          "type",
                          "sizes"
                        ],
                        "properties": {
                          "src": {
                            "type": "string",
                            "minLength": 1
                          },
                          "type": {
                            "type": "string"
                          },
                          "sizes": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "display": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "short_name",
                    "start_url",
                    "theme_color",
                    "background_color",
                    "description",
                    "icons",
                    "display"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/theming"
        ]
      }
    },
    "/index.php/apps/theming/favicon/{app}": {
      "get": {
        "operationId": "theming-icon-get-favicon",
        "summary": "Return a 32x32 favicon as png",
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string",
              "default": "core"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Favicon returned",
            "content": {
              "image/x-icon": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Favicon not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/icon"
        ]
      }
    },
    "/index.php/apps/theming/icon/{app}": {
      "get": {
        "operationId": "theming-icon-get-touch-icon",
        "summary": "Return a 512x512 icon for touch devices",
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string",
              "default": "core"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Touch icon returned",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/x-icon": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Touch icon not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/icon"
        ]
      }
    },
    "/index.php/apps/theming/img/{app}/{image}": {
      "get": {
        "operationId": "theming-icon-get-themed-icon",
        "summary": "Get a themed icon",
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "description": "ID of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image",
            "in": "path",
            "description": "image file name (svg required)",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Themed icon returned",
            "content": {
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Themed icon not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/icon"
        ]
      }
    },
    "/index.php/apps/theming/background": {
      "get": {
        "operationId": "theming-user_theme-get-background",
        "summary": "Get the background image",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Background image returned",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Background image not found",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/user_theme"
        ]
      }
    },
    "/index.php/apps/theming/background/{type}": {
      "post": {
        "operationId": "theming-user_theme-set-background",
        "summary": "Set the background",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of background",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Path of the background image",
                    "type": "string",
                    "default": ""
                  },
                  "color": {
                    "description": "Color for the background",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Background set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemingBackground"
                }
              }
            }
          },
          "400": {
            "description": "Setting background is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/user_theme"
        ]
      }
    },
    "/index.php/apps/theming/background/custom": {
      "delete": {
        "operationId": "theming-user_theme-delete-background",
        "summary": "Delete the background",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Background deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemingBackground"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/user_theme"
        ]
      }
    },
    "/ocs/v2.php/apps/theming/api/v1/theme/{themeId}/enable": {
      "put": {
        "operationId": "theming-user_theme-enable-theme",
        "summary": "Enable theme",
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "the theme ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Theme enabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Enabling theme is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/user_theme"
        ]
      }
    },
    "/ocs/v2.php/apps/theming/api/v1/theme/{themeId}": {
      "delete": {
        "operationId": "theming-user_theme-disable-theme",
        "summary": "Disable theme",
        "parameters": [
          {
            "name": "themeId",
            "in": "path",
            "description": "the theme ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Theme disabled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Disabling theme is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "theming/user_theme"
        ]
      }
    },
    "/ocs/v2.php/apps/updatenotification/api/{apiVersion}/applist/{newVersion}": {
      "get": {
        "operationId": "updatenotification-api-get-app-list",
        "summary": "List available updates for apps",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "const": "v1"
            }
          },
          {
            "name": "newVersion",
            "in": "path",
            "description": "Server version to check updates for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UpdatenotificationApp"
                              }
                            },
                            "available": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/UpdatenotificationApp"
                              }
                            }
                          },
                          "required": [
                            "missing",
                            "available"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "New versions not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "appstore_disabled": {
                              "type": "boolean"
                            },
                            "already_on_latest": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "appstore_disabled"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "updatenotification/api"
        ]
      }
    },
    "/ocs/v2.php/apps/updatenotification/api/{apiVersion}/changelog/{appId}": {
      "get": {
        "operationId": "updatenotification-api-get-app-changelog-entry",
        "summary": "Get changelog entry for an app",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "const": "v1"
            }
          },
          {
            "name": "appId",
            "in": "path",
            "description": "App to search changelog entry for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The version to search the changelog entry for (defaults to the latest installed)",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changelog entry returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "appName": {
                              "type": "string"
                            },
                            "content": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "appName",
                            "content",
                            "version"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The `version` parameter is not a valid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No changelog found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "updatenotification/api"
        ]
      }
    },
    "/ocs/v2.php/apps/user_ldap/api/v1/config": {
      "post": {
        "operationId": "user_ldap-configapi-create",
        "summary": "Create a new (empty) configuration and return the resulting prefix",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "configID": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "configID"
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_ldap/configapi"
        ]
      }
    },
    "/ocs/v2.php/apps/user_ldap/api/v1/config/{configID}": {
      "get": {
        "operationId": "user_ldap-configapi-show",
        "summary": "Get a configuration",
        "description": "Output can look like this: <?xml version=\"1.0\"?> <ocs> <meta> <status>ok</status> <statuscode>200</statuscode> <message>OK</message> </meta> <data> <ldapHost>ldaps://my.ldap.server</ldapHost> <ldapPort>7770</ldapPort> <ldapBackupHost></ldapBackupHost> <ldapBackupPort></ldapBackupPort> <ldapBase>ou=small,dc=my,dc=ldap,dc=server</ldapBase> <ldapBaseUsers>ou=users,ou=small,dc=my,dc=ldap,dc=server</ldapBaseUsers> <ldapBaseGroups>ou=small,dc=my,dc=ldap,dc=server</ldapBaseGroups> <ldapAgentName>cn=root,dc=my,dc=ldap,dc=server</ldapAgentName> <ldapAgentPassword>clearTextWithShowPassword=1</ldapAgentPassword> <ldapTLS>1</ldapTLS> <turnOffCertCheck>0</turnOffCertCheck> <ldapIgnoreNamingRules/> <ldapUserDisplayName>displayname</ldapUserDisplayName> <ldapUserDisplayName2>uid</ldapUserDisplayName2> <ldapUserFilterObjectclass>inetOrgPerson</ldapUserFilterObjectclass> <ldapUserFilterGroups></ldapUserFilterGroups> <ldapUserFilter>(&amp;(objectclass=nextcloudUser)(nextcloudEnabled=TRUE))</ldapUserFilter> <ldapUserFilterMode>1</ldapUserFilterMode> <ldapGroupFilter>(&amp;(|(objectclass=nextcloudGroup)))</ldapGroupFilter> <ldapGroupFilterMode>0</ldapGroupFilterMode> <ldapGroupFilterObjectclass>nextcloudGroup</ldapGroupFilterObjectclass> <ldapGroupFilterGroups></ldapGroupFilterGroups> <ldapGroupDisplayName>cn</ldapGroupDisplayName> <ldapGroupMemberAssocAttr>memberUid</ldapGroupMemberAssocAttr> <ldapLoginFilter>(&amp;(|(objectclass=inetOrgPerson))(uid=%uid))</ldapLoginFilter> <ldapLoginFilterMode>0</ldapLoginFilterMode> <ldapLoginFilterEmail>0</ldapLoginFilterEmail> <ldapLoginFilterUsername>1</ldapLoginFilterUsername> <ldapLoginFilterAttributes></ldapLoginFilterAttributes> <ldapQuotaAttribute></ldapQuotaAttribute> <ldapQuotaDefault></ldapQuotaDefault> <ldapEmailAttribute>mail</ldapEmailAttribute> <ldapCacheTTL>20</ldapCacheTTL> <ldapUuidUserAttribute>auto</ldapUuidUserAttribute> <ldapUuidGroupAttribute>auto</ldapUuidGroupAttribute> <ldapOverrideMainServer></ldapOverrideMainServer> <ldapConfigurationActive>1</ldapConfigurationActive> <ldapAttributesForUserSearch>uid;sn;givenname</ldapAttributesForUserSearch> <ldapAttributesForGroupSearch></ldapAttributesForGroupSearch> <ldapExperiencedAdmin>0</ldapExperiencedAdmin> <homeFolderNamingRule></homeFolderNamingRule> <hasMemberOfFilterSupport></hasMemberOfFilterSupport> <useMemberOfToDetectMembership>1</useMemberOfToDetectMembership> <ldapExpertUsernameAttr>uid</ldapExpertUsernameAttr> <ldapExpertUUIDUserAttr>uid</ldapExpertUUIDUserAttr> <ldapExpertUUIDGroupAttr></ldapExpertUUIDGroupAttr> <lastJpegPhotoLookup>0</lastJpegPhotoLookup> <ldapNestedGroups>0</ldapNestedGroups> <ldapPagingSize>500</ldapPagingSize> <turnOnPasswordChange>1</turnOnPasswordChange> <ldapDynamicGroupMemberURL></ldapDynamicGroupMemberURL> </data> </ocs>\nThis endpoint requires admin access",
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "description": "ID of the config",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "showPassword",
            "in": "query",
            "description": "Whether to show the password",
            "schema": {
              "type": "integer",
              "default": 0,
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Config not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_ldap/configapi"
        ]
      },
      "put": {
        "operationId": "user_ldap-configapi-modify",
        "summary": "Modify a configuration",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "description": "ID of the config",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "configData": {
                    "description": "New config",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "configData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Config returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Modifying config is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Config not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_ldap/configapi"
        ]
      },
      "delete": {
        "operationId": "user_ldap-configapi-delete",
        "summary": "Delete a LDAP configuration",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "configID",
            "in": "path",
            "description": "ID of the config",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Config not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_ldap/configapi"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/heartbeat": {
      "put": {
        "operationId": "user_status-heartbeat-heartbeat",
        "summary": "Keep the status alive",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Only online, away",
                    "type": "string"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPrivate"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "204": {
            "description": "User has no status to keep alive"
          },
          "400": {
            "description": "Invalid status to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/heartbeat"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/predefined_statuses": {
      "get": {
        "operationId": "user_status-predefined_status-find-all",
        "summary": "Get all predefined messages",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Predefined statuses returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserStatusPredefined"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/predefined_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/statuses": {
      "get": {
        "operationId": "user_status-statuses-find-all",
        "summary": "Find statuses of users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of statuses to find",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for finding statuses",
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statuses returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserStatusPublic"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/statuses"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/statuses/{userId}": {
      "get": {
        "operationId": "user_status-statuses-find",
        "summary": "Find the status of a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPublic"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The user was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/statuses"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status": {
      "get": {
        "operationId": "user_status-user_status-get-status",
        "summary": "Get the status of the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The status was found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPrivate"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The user was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status/status": {
      "put": {
        "operationId": "user_status-user_status-set-status",
        "summary": "Update the status type of the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statusType": {
                    "description": "The new status type",
                    "type": "string"
                  }
                },
                "required": [
                  "statusType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The status was updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPrivate"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The status type is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status/message/predefined": {
      "put": {
        "operationId": "user_status-user_status-set-predefined-message",
        "summary": "Set the message to a predefined message for the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageId": {
                    "description": "ID of the predefined message",
                    "type": "string"
                  },
                  "clearAt": {
                    "description": "When the message should be cleared",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                },
                "required": [
                  "messageId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The message was updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPrivate"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The clearAt or message-id is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status/message/custom": {
      "put": {
        "operationId": "user_status-user_status-set-custom-message",
        "summary": "Set the message to a custom message for the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statusIcon": {
                    "description": "Icon of the status",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "message": {
                    "description": "Message of the status",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "clearAt": {
                    "description": "When the message should be cleared",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The message was updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/UserStatusPrivate"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The clearAt or icon is invalid or the message is too long",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No status for the current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status/message": {
      "delete": {
        "operationId": "user_status-user_status-clear-message",
        "summary": "Clear the message of the current user",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/user_status/api/v1/user_status/revert/{messageId}": {
      "delete": {
        "operationId": "user_status-user_status-revert-status",
        "summary": "Revert the status to the previous status",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "ID of the message to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status reverted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/UserStatusPrivate"
                            },
                            {
                              "type": "array",
                              "maxItems": 0
                            }
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "user_status/user_status"
        ]
      }
    },
    "/ocs/v2.php/apps/weather_status/api/v1/mode": {
      "put": {
        "operationId": "weather_status-weather_status-set-mode",
        "summary": "Change the weather status mode. There are currently 2 modes: - ask the browser - use the user defined address",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "description": "New mode",
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "required": [
                  "mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Weather status mode updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusSuccess"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      }
    },
    "/ocs/v2.php/apps/weather_status/api/v1/use-personal": {
      "put": {
        "operationId": "weather_status-weather_status-use-personal-address",
        "summary": "Try to use the address set in user personal settings as weather location",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusLocationWithSuccess"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      }
    },
    "/ocs/v2.php/apps/weather_status/api/v1/location": {
      "get": {
        "operationId": "weather_status-weather_status-get-location",
        "summary": "Get stored user location",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusLocationWithMode"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      },
      "put": {
        "operationId": "weather_status-weather_status-set-location",
        "summary": "Set address and resolve it to get coordinates or directly set coordinates and get address with reverse geocoding",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "Any approximative or exact address",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "lat": {
                    "description": "Latitude in decimal degree format",
                    "type": [
                      "number",
                      "null"
                    ],
                    "format": "double"
                  },
                  "lon": {
                    "description": "Longitude in decimal degree format",
                    "type": [
                      "number",
                      "null"
                    ],
                    "format": "double"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusLocationWithSuccess"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      }
    },
    "/ocs/v2.php/apps/weather_status/api/v1/forecast": {
      "get": {
        "operationId": "weather_status-weather_status-get-forecast",
        "summary": "Get forecast for current location",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forecast returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/WeatherStatusForecast"
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "error"
                              ],
                              "properties": {
                                "error": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Forecast not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusSuccess"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      }
    },
    "/ocs/v2.php/apps/weather_status/api/v1/favorites": {
      "get": {
        "operationId": "weather_status-weather_status-get-favorites",
        "summary": "Get favorites list",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Favorites returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      },
      "put": {
        "operationId": "weather_status-weather_status-set-favorites",
        "summary": "Set favorites list",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "favorites": {
                    "description": "Favorite addresses",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "favorites"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Favorites updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WeatherStatusSuccess"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "weather_status/weather_status"
        ]
      }
    },
    "/ocs/v2.php/apps/webhook_listeners/api/v1/webhooks": {
      "get": {
        "operationId": "webhook_listeners-webhooks-index",
        "summary": "List registered webhooks",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "The callback URI to filter by",
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook registrations returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/WebhookListenersWebhookInfo"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      },
      "post": {
        "operationId": "webhook_listeners-webhooks-create",
        "summary": "Register a new webhook",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "httpMethod": {
                    "description": "HTTP method to use to contact the webhook",
                    "type": "string"
                  },
                  "uri": {
                    "description": "Webhook URI endpoint",
                    "type": "string"
                  },
                  "event": {
                    "description": "Event class name to listen to",
                    "type": "string"
                  },
                  "eventFilter": {
                    "description": "Mongo filter to apply to the serialized data to decide if firing",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "userIdFilter": {
                    "description": "User id to filter on. The webhook will only be called by requests from this user. Empty or null means no filtering.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "headers": {
                    "description": "Array of headers to send",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "authMethod": {
                    "description": "Authentication method to use",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "none",
                      "headers"
                    ]
                  },
                  "authData": {
                    "description": "Array of data for authentication",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "httpMethod",
                  "uri",
                  "event"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook registration returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WebhookListenersWebhookInfo"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      }
    },
    "/ocs/v2.php/apps/webhook_listeners/api/v1/webhooks/{id}": {
      "get": {
        "operationId": "webhook_listeners-webhooks-show",
        "summary": "Get details on a registered webhook",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook registration returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WebhookListenersWebhookInfo"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      },
      "post": {
        "operationId": "webhook_listeners-webhooks-update",
        "summary": "Update an existing webhook registration",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "httpMethod": {
                    "description": "HTTP method to use to contact the webhook",
                    "type": "string"
                  },
                  "uri": {
                    "description": "Webhook URI endpoint",
                    "type": "string"
                  },
                  "event": {
                    "description": "Event class name to listen to",
                    "type": "string"
                  },
                  "eventFilter": {
                    "description": "Mongo filter to apply to the serialized data to decide if firing",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "userIdFilter": {
                    "description": "User id to filter on. The webhook will only be called by requests from this user. Empty or null means no filtering.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "headers": {
                    "description": "Array of headers to send",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "authMethod": {
                    "description": "Authentication method to use",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "none",
                      "headers"
                    ]
                  },
                  "authData": {
                    "description": "Array of data for authentication",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "httpMethod",
                  "uri",
                  "event"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook registration returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "$ref": "#/components/schemas/WebhookListenersWebhookInfo"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      },
      "delete": {
        "operationId": "webhook_listeners-webhooks-destroy",
        "summary": "Remove an existing webhook registration",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the webhook",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boolean returned whether something was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      }
    },
    "/ocs/v2.php/apps/webhook_listeners/api/v1/webhooks/byappid/{appid}": {
      "delete": {
        "operationId": "webhook_listeners-webhooks-delete-by-app-id",
        "summary": "Remove all existing webhook registration mapped to an AppAPI app id",
        "description": "This endpoint requires admin access",
        "parameters": [
          {
            "name": "appid",
            "in": "path",
            "description": "id of the app, as in the EX-APP-ID for creation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OCS-APIRequest",
            "in": "header",
            "description": "Required to be true for the API request to pass",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integer number of registrations deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ocs": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/OCSMeta"
                        },
                        "data": {}
                      },
                      "required": [
                        "meta",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "ocs"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          },
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "webhook_listeners/webhooks"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CoreAutocompleteResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "status": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "icon",
                  "clearAt"
                ],
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "message": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "icon": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "clearAt": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "subline": {
            "type": "string"
          },
          "shareWithDisplayNameUnique": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "label",
          "icon",
          "source",
          "status",
          "subline",
          "shareWithDisplayNameUnique"
        ]
      },
      "CoreCapabilities": {
        "type": "object",
        "properties": {
          "core": {
            "type": "object",
            "properties": {
              "pollinterval": {
                "type": "integer",
                "format": "int64"
              },
              "webdav-root": {
                "type": "string"
              },
              "reference-api": {
                "type": "boolean"
              },
              "reference-regex": {
                "type": "string"
              },
              "mod-rewrite-working": {
                "type": "boolean"
              }
            },
            "required": [
              "pollinterval",
              "webdav-root",
              "reference-api",
              "reference-regex",
              "mod-rewrite-working"
            ]
          }
        },
        "required": [
          "core"
        ]
      },
      "CoreCollection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoreResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "resources"
        ]
      },
      "CoreContactsAction": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "hyperlink": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "icon",
          "hyperlink",
          "appId"
        ]
      },
      "CoreLoginFlowV2": {
        "type": "object",
        "properties": {
          "poll": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              }
            },
            "required": [
              "token",
              "endpoint"
            ]
          },
          "login": {
            "type": "string"
          }
        },
        "required": [
          "poll",
          "login"
        ]
      },
      "CoreLoginFlowV2Credentials": {
        "type": "object",
        "properties": {
          "server": {
            "type": "string"
          },
          "loginName": {
            "type": "string"
          },
          "appPassword": {
            "type": "string"
          }
        },
        "required": [
          "server",
          "loginName",
          "appPassword"
        ]
      },
      "CoreNavigationEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "href": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "classes": {
            "type": "string"
          },
          "unread": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "id",
          "href",
          "icon",
          "type",
          "name",
          "active",
          "classes",
          "unread"
        ]
      },
      "OCSMeta": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statuscode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "totalitems": {
            "type": "string"
          },
          "itemsperpage": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "statuscode"
        ]
      },
      "CoreOpenGraphObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "thumb": {
            "type": [
              "string",
              "null"
            ]
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "thumb",
          "link"
        ]
      },
      "CorePublicCapabilities": {
        "type": "object",
        "properties": {
          "bruteforce": {
            "type": "object",
            "properties": {
              "delay": {
                "type": "integer",
                "format": "int64"
              },
              "allow-listed": {
                "type": "boolean"
              }
            },
            "required": [
              "delay",
              "allow-listed"
            ]
          }
        },
        "required": [
          "bruteforce"
        ]
      },
      "CoreReference": {
        "type": "object",
        "properties": {
          "richObjectType": {
            "type": "string"
          },
          "richObject": {
            "type": "object",
            "additionalProperties": {
              "type": [
                "object",
                "null"
              ]
            }
          },
          "openGraphObject": {
            "$ref": "#/components/schemas/CoreOpenGraphObject"
          },
          "accessible": {
            "type": "boolean"
          }
        },
        "required": [
          "richObjectType",
          "richObject",
          "openGraphObject",
          "accessible"
        ]
      },
      "CoreReferenceProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "icon_url": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "search_providers_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "title",
          "icon_url",
          "order",
          "search_providers_ids"
        ]
      },
      "CoreResource": {
        "type": "object",
        "properties": {
          "richObjectType": {
            "type": "string"
          },
          "richObject": {
            "type": "object",
            "additionalProperties": {
              "type": [
                "object",
                "null"
              ]
            }
          },
          "openGraphObject": {
            "$ref": "#/components/schemas/CoreOpenGraphObject"
          },
          "accessible": {
            "type": "boolean"
          }
        },
        "required": [
          "richObjectType",
          "richObject",
          "openGraphObject",
          "accessible"
        ]
      },
      "CoreStatus": {
        "type": "object",
        "properties": {
          "installed": {
            "type": "boolean"
          },
          "maintenance": {
            "type": "boolean"
          },
          "needsDbUpgrade": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          },
          "versionstring": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "productname": {
            "type": "string"
          },
          "extendedSupport": {
            "type": "boolean"
          }
        },
        "required": [
          "installed",
          "maintenance",
          "needsDbUpgrade",
          "version",
          "versionstring",
          "edition",
          "productname",
          "extendedSupport"
        ]
      },
      "CoreTaskProcessingIO": {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "CoreTaskProcessingShape": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Number",
              "Text",
              "Audio",
              "Image",
              "Video",
              "File",
              "Enum",
              "ListOfNumbers",
              "ListOfTexts",
              "ListOfImages",
              "ListOfAudios",
              "ListOfVideos",
              "ListOfFiles"
            ]
          }
        },
        "required": [
          "name",
          "description",
          "type"
        ]
      },
      "CoreTaskProcessingTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "STATUS_CANCELLED",
              "STATUS_FAILED",
              "STATUS_SUCCESSFUL",
              "STATUS_RUNNING",
              "STATUS_SCHEDULED",
              "STATUS_UNKNOWN"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ]
          },
          "appId": {
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/CoreTaskProcessingIO"
          },
          "output": {
            "$ref": "#/components/schemas/CoreTaskProcessingIO",
            "nullable": true
          },
          "customId": {
            "type": [
              "string",
              "null"
            ]
          },
          "completionExpectedAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "progress": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "scheduledAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "startedAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "endedAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        },
        "required": [
          "id",
          "lastUpdated",
          "type",
          "status",
          "userId",
          "appId",
          "input",
          "output",
          "customId",
          "completionExpectedAt",
          "progress",
          "scheduledAt",
          "startedAt",
          "endedAt"
        ]
      },
      "CoreTaskProcessingTaskType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "inputShape": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CoreTaskProcessingShape"
            }
          },
          "inputShapeEnumValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "inputShapeDefaults": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "optionalInputShape": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CoreTaskProcessingShape"
            }
          },
          "optionalInputShapeEnumValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "optionalInputShapeDefaults": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "outputShape": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CoreTaskProcessingShape"
            }
          },
          "outputShapeEnumValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "optionalOutputShape": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CoreTaskProcessingShape"
            }
          },
          "optionalOutputShapeEnumValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "description",
          "inputShape",
          "inputShapeEnumValues",
          "inputShapeDefaults",
          "optionalInputShape",
          "optionalInputShapeEnumValues",
          "optionalInputShapeDefaults",
          "outputShape",
          "outputShapeEnumValues",
          "optionalOutputShape",
          "optionalOutputShapeEnumValues"
        ]
      },
      "CoreTeam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "icon"
        ]
      },
      "CoreTeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "label": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "iconSvg": {
            "type": [
              "string",
              "null"
            ]
          },
          "iconURL": {
            "type": [
              "string",
              "null"
            ]
          },
          "iconEmoji": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "label",
          "url",
          "iconSvg",
          "iconURL",
          "iconEmoji"
        ]
      },
      "CoreTextProcessingTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ]
          },
          "appId": {
            "type": "string"
          },
          "input": {
            "type": "string"
          },
          "output": {
            "type": [
              "string",
              "null"
            ]
          },
          "identifier": {
            "type": "string"
          },
          "completionExpectedAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        },
        "required": [
          "id",
          "type",
          "status",
          "userId",
          "appId",
          "input",
          "output",
          "identifier",
          "completionExpectedAt"
        ]
      },
      "CoreTextToImageTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ]
          },
          "appId": {
            "type": "string"
          },
          "input": {
            "type": "string"
          },
          "identifier": {
            "type": [
              "string",
              "null"
            ]
          },
          "numberOfImages": {
            "type": "integer",
            "format": "int64"
          },
          "completionExpectedAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        },
        "required": [
          "id",
          "status",
          "userId",
          "appId",
          "input",
          "identifier",
          "numberOfImages",
          "completionExpectedAt"
        ]
      },
      "CoreUnifiedSearchProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "inAppSearch": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "appId",
          "name",
          "icon",
          "order",
          "triggers",
          "filters",
          "inAppSearch"
        ]
      },
      "CoreUnifiedSearchResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isPaginated": {
            "type": "boolean"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoreUnifiedSearchResultEntry"
            }
          },
          "cursor": {
            "nullable": true,
            "oneOf": [
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "name",
          "isPaginated",
          "entries",
          "cursor"
        ]
      },
      "CoreUnifiedSearchResultEntry": {
        "type": "object",
        "properties": {
          "thumbnailUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subline": {
            "type": "string"
          },
          "resourceUrl": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "rounded": {
            "type": "boolean"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "thumbnailUrl",
          "title",
          "subline",
          "resourceUrl",
          "icon",
          "rounded",
          "attributes"
        ]
      },
      "CloudFederationApiAddShare": {
        "type": "object",
        "properties": {
          "recipientDisplayName": {
            "type": "string"
          },
          "recipientUserId": {
            "type": "string"
          }
        },
        "required": [
          "recipientDisplayName"
        ]
      },
      "CloudFederationApiCapabilities": {
        "type": "object",
        "properties": {
          "ocm": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "type": "string",
                "const": "1.0-proposal1"
              },
              "enabled": {
                "type": "boolean"
              },
              "endPoint": {
                "type": "string"
              },
              "publicKey": {
                "type": "object",
                "properties": {
                  "keyId": {
                    "type": "string"
                  },
                  "publicKeyPem": {
                    "type": "string"
                  }
                },
                "required": [
                  "keyId",
                  "publicKeyPem"
                ]
              },
              "resourceTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "shareTypes",
                    "protocols"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "shareTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "protocols": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "apiVersion",
              "enabled",
              "endPoint",
              "publicKey",
              "resourceTypes",
              "version"
            ]
          }
        },
        "required": [
          "ocm"
        ]
      },
      "CloudFederationApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "CloudFederationApiValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudFederationApiError"
          },
          {
            "type": "object",
            "required": [
              "validationErrors"
            ],
            "properties": {
              "validationErrors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "message"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "CommentsCapabilities": {
        "type": "object",
        "properties": {
          "files": {
            "type": "object",
            "properties": {
              "comments": {
                "type": "boolean"
              }
            },
            "required": [
              "comments"
            ]
          }
        },
        "required": [
          "files"
        ]
      },
      "DashboardWidget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "icon_class": {
            "type": "string"
          },
          "icon_url": {
            "type": "string"
          },
          "widget_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "item_icons_round": {
            "type": "boolean"
          },
          "item_api_versions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "reload_interval": {
            "type": "integer",
            "format": "int64"
          },
          "buttons": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "text",
                "link"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "title",
          "order",
          "icon_class",
          "icon_url",
          "widget_url",
          "item_icons_round",
          "item_api_versions",
          "reload_interval"
        ]
      },
      "DashboardWidgetItem": {
        "type": "object",
        "properties": {
          "subtitle": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "overlayIconUrl": {
            "type": "string"
          },
          "sinceId": {
            "type": "string"
          }
        },
        "required": [
          "subtitle",
          "title",
          "link",
          "iconUrl",
          "overlayIconUrl",
          "sinceId"
        ]
      },
      "DashboardWidgetItems": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardWidgetItem"
            }
          },
          "emptyContentMessage": {
            "type": "string"
          },
          "halfEmptyContentMessage": {
            "type": "string"
          }
        },
        "required": [
          "items",
          "emptyContentMessage",
          "halfEmptyContentMessage"
        ]
      },
      "DavCapabilities": {
        "type": "object",
        "properties": {
          "dav": {
            "type": "object",
            "properties": {
              "chunking": {
                "type": "string"
              },
              "bulkupload": {
                "type": "string"
              },
              "absence-supported": {
                "type": "boolean"
              },
              "absence-replacement": {
                "type": "boolean"
              }
            },
            "required": [
              "chunking"
            ]
          }
        },
        "required": [
          "dav"
        ]
      },
      "DavCurrentOutOfOfficeData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DavOutOfOfficeDataCommon"
          },
          {
            "type": "object",
            "required": [
              "id",
              "startDate",
              "endDate",
              "shortMessage"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "startDate": {
                "type": "integer",
                "format": "int64"
              },
              "endDate": {
                "type": "integer",
                "format": "int64"
              },
              "shortMessage": {
                "type": "string"
              }
            }
          }
        ]
      },
      "DavOutOfOfficeData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DavOutOfOfficeDataCommon"
          },
          {
            "type": "object",
            "required": [
              "id",
              "firstDay",
              "lastDay",
              "status"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "firstDay": {
                "type": "string"
              },
              "lastDay": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        ]
      },
      "DavOutOfOfficeDataCommon": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "replacementUserId": {
            "type": [
              "string",
              "null"
            ]
          },
          "replacementUserDisplayName": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "userId",
          "message",
          "replacementUserId",
          "replacementUserDisplayName"
        ]
      },
      "DavUpcomingEvent": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "calendarUri": {
            "type": "string"
          },
          "start": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "summary": {
            "type": [
              "string",
              "null"
            ]
          },
          "location": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "uri",
          "calendarUri",
          "start",
          "summary",
          "location"
        ]
      },
      "FilesCapabilities": {
        "type": "object",
        "properties": {
          "files": {
            "type": "object",
            "properties": {
              "$comment": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "bigfilechunking": {
                "type": "boolean"
              },
              "blacklisted_files": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "forbidden_filenames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "forbidden_filename_basenames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "forbidden_filename_characters": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "forbidden_filename_extensions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "chunked_upload": {
                "type": "object",
                "properties": {
                  "max_size": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "max_parallel_count": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "required": [
                  "max_size",
                  "max_parallel_count"
                ]
              },
              "file_conversions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "from",
                    "to",
                    "extension",
                    "displayName"
                  ],
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    },
                    "extension": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    }
                  }
                }
              },
              "directEditing": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "etag": {
                    "type": "string"
                  },
                  "supportsFileId": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "url",
                  "etag",
                  "supportsFileId"
                ]
              }
            },
            "required": [
              "$comment",
              "bigfilechunking",
              "blacklisted_files",
              "forbidden_filenames",
              "forbidden_filename_basenames",
              "forbidden_filename_characters",
              "forbidden_filename_extensions",
              "chunked_upload",
              "file_conversions",
              "directEditing"
            ]
          }
        },
        "required": [
          "files"
        ]
      },
      "FilesFolderTree": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "basename",
            "children"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "basename": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      },
      "FilesTemplate": {
        "type": "object",
        "properties": {
          "templateType": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "basename": {
            "type": "string"
          },
          "etag": {
            "type": "string"
          },
          "fileid": {
            "type": "integer",
            "format": "int64"
          },
          "filename": {
            "type": "string"
          },
          "lastmod": {
            "type": "integer",
            "format": "int64"
          },
          "mime": {
            "type": "string"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "number",
                "format": "double"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "hasPreview": {
            "type": "boolean"
          },
          "previewUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesTemplateField"
            }
          }
        },
        "required": [
          "templateType",
          "templateId",
          "basename",
          "etag",
          "fileid",
          "filename",
          "lastmod",
          "mime",
          "size",
          "type",
          "hasPreview",
          "previewUrl",
          "fields"
        ]
      },
      "FilesTemplateField": {
        "type": "object",
        "properties": {
          "index": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alias": {
            "type": [
              "string",
              "null"
            ]
          },
          "tag": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "checked": {
            "type": "boolean"
          }
        },
        "required": [
          "index",
          "type",
          "alias",
          "tag",
          "id"
        ]
      },
      "FilesTemplateFile": {
        "type": "object",
        "properties": {
          "basename": {
            "type": "string"
          },
          "etag": {
            "type": "string"
          },
          "fileid": {
            "type": "integer",
            "format": "int64"
          },
          "filename": {
            "type": [
              "string",
              "null"
            ]
          },
          "lastmod": {
            "type": "integer",
            "format": "int64"
          },
          "mime": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "hasPreview": {
            "type": "boolean"
          }
        },
        "required": [
          "basename",
          "etag",
          "fileid",
          "filename",
          "lastmod",
          "mime",
          "size",
          "type",
          "hasPreview"
        ]
      },
      "FilesTemplateFileCreator": {
        "type": "object",
        "properties": {
          "app": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "iconClass": {
            "type": [
              "string",
              "null"
            ]
          },
          "iconSvgInline": {
            "type": [
              "string",
              "null"
            ]
          },
          "mimetypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ratio": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "actionLabel": {
            "type": "string"
          }
        },
        "required": [
          "app",
          "label",
          "extension",
          "iconClass",
          "iconSvgInline",
          "mimetypes",
          "ratio",
          "actionLabel"
        ]
      },
      "FilesTemplateFileCreatorWithTemplates": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesTemplateFileCreator"
          },
          {
            "type": "object",
            "required": [
              "templates"
            ],
            "properties": {
              "templates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesTemplate"
                }
              }
            }
          }
        ]
      },
      "FilesExternalMount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "const": "dir"
          },
          "backend": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": [
              "system",
              "personal"
            ]
          },
          "permissions": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "class": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/FilesExternalStorageConfig"
          }
        },
        "required": [
          "name",
          "path",
          "type",
          "backend",
          "scope",
          "permissions",
          "id",
          "class",
          "config"
        ]
      },
      "FilesExternalStorageConfig": {
        "type": "object",
        "properties": {
          "applicableGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applicableUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authMechanism": {
            "type": "string"
          },
          "backend": {
            "type": "string"
          },
          "backendOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "mountOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "mountPoint": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "statusMessage": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "personal",
              "system"
            ]
          },
          "userProvided": {
            "type": "boolean"
          }
        },
        "required": [
          "authMechanism",
          "backend",
          "backendOptions",
          "mountPoint",
          "type",
          "userProvided"
        ]
      },
      "FilesSharingCapabilities": {
        "type": "object",
        "properties": {
          "files_sharing": {
            "type": "object",
            "properties": {
              "api_enabled": {
                "type": "boolean"
              },
              "public": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "password": {
                    "type": "object",
                    "properties": {
                      "enforced": {
                        "type": "boolean"
                      },
                      "askForOptionalPassword": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enforced",
                      "askForOptionalPassword"
                    ]
                  },
                  "multiple_links": {
                    "type": "boolean"
                  },
                  "expire_date": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "days": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "enforced": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "expire_date_internal": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "days": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "enforced": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "expire_date_remote": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "days": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "enforced": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "send_mail": {
                    "type": "boolean"
                  },
                  "upload": {
                    "type": "boolean"
                  },
                  "upload_files_drop": {
                    "type": "boolean"
                  },
                  "custom_tokens": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "enabled"
                ]
              },
              "user": {
                "type": "object",
                "properties": {
                  "send_mail": {
                    "type": "boolean"
                  },
                  "expire_date": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  }
                },
                "required": [
                  "send_mail"
                ]
              },
              "resharing": {
                "type": "boolean"
              },
              "group_sharing": {
                "type": "boolean"
              },
              "group": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "expire_date": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  }
                },
                "required": [
                  "enabled"
                ]
              },
              "default_permissions": {
                "type": "integer",
                "format": "int64"
              },
              "federation": {
                "type": "object",
                "properties": {
                  "outgoing": {
                    "type": "boolean"
                  },
                  "incoming": {
                    "type": "boolean"
                  },
                  "expire_date": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "expire_date_supported": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  }
                },
                "required": [
                  "outgoing",
                  "incoming",
                  "expire_date",
                  "expire_date_supported"
                ]
              },
              "sharee": {
                "type": "object",
                "properties": {
                  "query_lookup_default": {
                    "type": "boolean"
                  },
                  "always_show_unique": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "query_lookup_default",
                  "always_show_unique"
                ]
              }
            },
            "required": [
              "api_enabled",
              "public",
              "user",
              "resharing",
              "federation",
              "sharee"
            ]
          }
        },
        "required": [
          "files_sharing"
        ]
      },
      "FilesSharingDeletedShare": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "share_type": {
            "type": "integer",
            "format": "int64"
          },
          "uid_owner": {
            "type": "string"
          },
          "displayname_owner": {
            "type": "string"
          },
          "permissions": {
            "type": "integer",
            "format": "int64"
          },
          "stime": {
            "type": "integer",
            "format": "int64"
          },
          "uid_file_owner": {
            "type": "string"
          },
          "displayname_file_owner": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "item_type": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "storage": {
            "type": "integer",
            "format": "int64"
          },
          "item_source": {
            "type": "integer",
            "format": "int64"
          },
          "file_source": {
            "type": "integer",
            "format": "int64"
          },
          "file_parent": {
            "type": "integer",
            "format": "int64"
          },
          "file_target": {
            "type": "integer",
            "format": "int64"
          },
          "expiration": {
            "type": [
              "string",
              "null"
            ]
          },
          "share_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "share_with_displayname": {
            "type": [
              "string",
              "null"
            ]
          },
          "share_with_link": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "share_type",
          "uid_owner",
          "displayname_owner",
          "permissions",
          "stime",
          "uid_file_owner",
          "displayname_file_owner",
          "path",
          "item_type",
          "mimetype",
          "storage",
          "item_source",
          "file_source",
          "file_parent",
          "file_target",
          "expiration",
          "share_with",
          "share_with_displayname",
          "share_with_link"
        ]
      },
      "FilesSharingLookup": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "verified": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "value",
          "verified"
        ]
      },
      "FilesSharingRemoteShare": {
        "type": "object",
        "properties": {
          "accepted": {
            "type": "boolean"
          },
          "file_id": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "mimetype": {
            "type": [
              "string",
              "null"
            ]
          },
          "mountpoint": {
            "type": "string"
          },
          "mtime": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "parent": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "permissions": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "remote": {
            "type": "string"
          },
          "remote_id": {
            "type": "string"
          },
          "share_token": {
            "type": "string"
          },
          "share_type": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": [
              "string",
              "null"
            ]
          },
          "user": {
            "type": "string"
          }
        },
        "required": [
          "accepted",
          "file_id",
          "id",
          "mimetype",
          "mountpoint",
          "mtime",
          "name",
          "owner",
          "parent",
          "permissions",
          "remote",
          "remote_id",
          "share_token",
          "share_type",
          "type",
          "user"
        ]
      },
      "FilesSharingShare": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": [
              "string",
              "null"
            ]
          },
          "can_delete": {
            "type": "boolean"
          },
          "can_edit": {
            "type": "boolean"
          },
          "displayname_file_owner": {
            "type": "string"
          },
          "displayname_owner": {
            "type": "string"
          },
          "expiration": {
            "type": [
              "string",
              "null"
            ]
          },
          "file_parent": {
            "type": "integer",
            "format": "int64"
          },
          "file_source": {
            "type": "integer",
            "format": "int64"
          },
          "file_target": {
            "type": "string"
          },
          "has_preview": {
            "type": "boolean"
          },
          "hide_download": {
            "type": "integer",
            "format": "int64",
            "enum": [
              0,
              1
            ]
          },
          "is-mount-root": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "item_mtime": {
            "type": "integer",
            "format": "int64"
          },
          "item_permissions": {
            "type": "integer",
            "format": "int64"
          },
          "item_size": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "item_source": {
            "type": "integer",
            "format": "int64"
          },
          "item_type": {
            "type": "string",
            "enum": [
              "file",
              "folder"
            ]
          },
          "label": {
            "type": "string"
          },
          "mail_send": {
            "type": "integer",
            "format": "int64",
            "enum": [
              0,
              1
            ]
          },
          "mimetype": {
            "type": "string"
          },
          "mount-type": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "parent": {
            "nullable": true
          },
          "password": {
            "type": [
              "string",
              "null"
            ]
          },
          "password_expiration_time": {
            "type": [
              "string",
              "null"
            ]
          },
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "permissions": {
            "type": "integer",
            "format": "int64"
          },
          "send_password_by_talk": {
            "type": "boolean"
          },
          "share_type": {
            "type": "integer",
            "format": "int64"
          },
          "share_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "share_with_avatar": {
            "type": "string"
          },
          "share_with_displayname": {
            "type": "string"
          },
          "share_with_displayname_unique": {
            "type": [
              "string",
              "null"
            ]
          },
          "share_with_link": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "clearAt": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "icon": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "clearAt",
              "icon",
              "message",
              "status"
            ]
          },
          "stime": {
            "type": "integer",
            "format": "int64"
          },
          "storage": {
            "type": "integer",
            "format": "int64"
          },
          "storage_id": {
            "type": "string"
          },
          "token": {
            "type": [
              "string",
              "null"
            ]
          },
          "uid_file_owner": {
            "type": "string"
          },
          "uid_owner": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "attributes",
          "can_delete",
          "can_edit",
          "displayname_file_owner",
          "displayname_owner",
          "expiration",
          "file_parent",
          "file_source",
          "file_target",
          "has_preview",
          "hide_download",
          "is-mount-root",
          "id",
          "item_mtime",
          "item_size",
          "item_source",
          "item_type",
          "label",
          "mail_send",
          "mimetype",
          "mount-type",
          "note",
          "parent",
          "path",
          "permissions",
          "share_type",
          "stime",
          "storage",
          "storage_id",
          "token",
          "uid_file_owner",
          "uid_owner"
        ]
      },
      "FilesSharingShareInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "mtime": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "integer",
            "format": "int64"
          },
          "mimetype": {
            "type": "string"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "number",
                "format": "double"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "etag": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "required": [
          "id",
          "parentId",
          "mtime",
          "name",
          "permissions",
          "mimetype",
          "size",
          "type",
          "etag"
        ]
      },
      "FilesSharingSharee": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "FilesSharingShareeCircle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "shareWithDescription",
              "value"
            ],
            "properties": {
              "shareWithDescription": {
                "type": "string"
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FilesSharingShareeValue"
                  },
                  {
                    "type": "object",
                    "required": [
                      "circle"
                    ],
                    "properties": {
                      "circle": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "FilesSharingShareeEmail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "uuid",
              "name",
              "type",
              "shareWithDisplayNameUnique",
              "value"
            ],
            "properties": {
              "uuid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "shareWithDisplayNameUnique": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/FilesSharingShareeValue"
              }
            }
          }
        ]
      },
      "FilesSharingShareeGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/FilesSharingShareeValue"
              }
            }
          }
        ]
      },
      "FilesSharingShareeLookup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "extra",
              "value"
            ],
            "properties": {
              "extra": {
                "type": "object",
                "properties": {
                  "federationId": {
                    "type": "string"
                  },
                  "name": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "email": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "address": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "website": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "twitter": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "phone": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "twitter_signature": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "website_signature": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  },
                  "userid": {
                    "$ref": "#/components/schemas/FilesSharingLookup",
                    "nullable": true
                  }
                },
                "required": [
                  "federationId",
                  "name",
                  "email",
                  "address",
                  "website",
                  "twitter",
                  "phone",
                  "twitter_signature",
                  "website_signature",
                  "userid"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FilesSharingShareeValue"
                  },
                  {
                    "type": "object",
                    "required": [
                      "globalScale"
                    ],
                    "properties": {
                      "globalScale": {
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "FilesSharingShareeRemote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "uuid",
              "name",
              "type",
              "value"
            ],
            "properties": {
              "uuid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FilesSharingShareeValue"
                  },
                  {
                    "type": "object",
                    "required": [
                      "server"
                    ],
                    "properties": {
                      "server": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "FilesSharingShareeRemoteGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "guid",
              "name",
              "value"
            ],
            "properties": {
              "guid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FilesSharingShareeValue"
                  },
                  {
                    "type": "object",
                    "required": [
                      "server"
                    ],
                    "properties": {
                      "server": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "FilesSharingShareeRoom": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/FilesSharingShareeValue"
              }
            }
          }
        ]
      },
      "FilesSharingShareeUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilesSharingSharee"
          },
          {
            "type": "object",
            "required": [
              "subline",
              "icon",
              "shareWithDisplayNameUnique",
              "status",
              "value"
            ],
            "properties": {
              "subline": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              },
              "shareWithDisplayNameUnique": {
                "type": "string"
              },
              "status": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "clearAt": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  }
                },
                "required": [
                  "status",
                  "message",
                  "icon",
                  "clearAt"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/FilesSharingShareeValue"
              }
            }
          }
        ]
      },
      "FilesSharingShareeValue": {
        "type": "object",
        "properties": {
          "shareType": {
            "type": "integer",
            "format": "int64"
          },
          "shareWith": {
            "type": "string"
          }
        },
        "required": [
          "shareType",
          "shareWith"
        ]
      },
      "FilesSharingShareesRecommendedResult": {
        "type": "object",
        "properties": {
          "exact": {
            "type": "object",
            "properties": {
              "emails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeEmail"
                }
              },
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeGroup"
                }
              },
              "remote_groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeRemoteGroup"
                }
              },
              "remotes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeRemote"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeUser"
                }
              }
            },
            "required": [
              "emails",
              "groups",
              "remote_groups",
              "remotes",
              "users"
            ]
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeEmail"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeGroup"
            }
          },
          "remote_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeRemoteGroup"
            }
          },
          "remotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeRemote"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeUser"
            }
          }
        },
        "required": [
          "exact",
          "emails",
          "groups",
          "remote_groups",
          "remotes",
          "users"
        ]
      },
      "FilesSharingShareesSearchResult": {
        "type": "object",
        "properties": {
          "exact": {
            "type": "object",
            "properties": {
              "circles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeCircle"
                }
              },
              "emails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeEmail"
                }
              },
              "groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeGroup"
                }
              },
              "remote_groups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeRemoteGroup"
                }
              },
              "remotes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeRemote"
                }
              },
              "rooms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeRoom"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilesSharingShareeUser"
                }
              }
            },
            "required": [
              "circles",
              "emails",
              "groups",
              "remote_groups",
              "remotes",
              "rooms",
              "users"
            ]
          },
          "circles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeCircle"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeEmail"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeGroup"
            }
          },
          "lookup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeLookup"
            }
          },
          "remote_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeRemoteGroup"
            }
          },
          "remotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeRemote"
            }
          },
          "rooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeRoom"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilesSharingShareeUser"
            }
          },
          "lookupEnabled": {
            "type": "boolean"
          }
        },
        "required": [
          "exact",
          "circles",
          "emails",
          "groups",
          "lookup",
          "remote_groups",
          "remotes",
          "rooms",
          "users",
          "lookupEnabled"
        ]
      },
      "FilesTrashbinCapabilities": {
        "type": "object",
        "properties": {
          "files": {
            "type": "object",
            "properties": {
              "undelete": {
                "type": "boolean"
              },
              "delete_from_trash": {
                "type": "boolean"
              }
            },
            "required": [
              "undelete",
              "delete_from_trash"
            ]
          }
        },
        "required": [
          "files"
        ]
      },
      "FilesVersionsCapabilities": {
        "type": "object",
        "properties": {
          "files": {
            "type": "object",
            "properties": {
              "versioning": {
                "type": "boolean"
              },
              "version_labeling": {
                "type": "boolean"
              },
              "version_deletion": {
                "type": "boolean"
              }
            },
            "required": [
              "versioning",
              "version_labeling",
              "version_deletion"
            ]
          }
        },
        "required": [
          "files"
        ]
      },
      "ProvisioningApiCapabilities": {
        "type": "object",
        "properties": {
          "provisioning_api": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "AccountPropertyScopesVersion": {
                "type": "integer",
                "format": "int64"
              },
              "AccountPropertyScopesFederatedEnabled": {
                "type": "boolean"
              },
              "AccountPropertyScopesPublishedEnabled": {
                "type": "boolean"
              }
            },
            "required": [
              "version",
              "AccountPropertyScopesVersion",
              "AccountPropertyScopesFederatedEnabled",
              "AccountPropertyScopesPublishedEnabled"
            ]
          }
        },
        "required": [
          "provisioning_api"
        ]
      },
      "ProvisioningApiGroupDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "usercount": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "disabled": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "canAdd": {
            "type": "boolean"
          },
          "canRemove": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "displayname",
          "usercount",
          "disabled",
          "canAdd",
          "canRemove"
        ]
      },
      "ProvisioningApiUserDetails": {
        "type": "object",
        "properties": {
          "additional_mail": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additional_mailScope": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
            }
          },
          "address": {
            "type": "string"
          },
          "addressScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "avatarScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "backend": {
            "type": "string"
          },
          "backendCapabilities": {
            "type": "object",
            "properties": {
              "setDisplayName": {
                "type": "boolean"
              },
              "setPassword": {
                "type": "boolean"
              }
            },
            "required": [
              "setDisplayName",
              "setPassword"
            ]
          },
          "biography": {
            "type": "string"
          },
          "biographyScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "display-name": {
            "type": "string"
          },
          "displayname": {
            "type": "string"
          },
          "displaynameScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "enabled": {
            "type": "boolean"
          },
          "fediverse": {
            "type": "string"
          },
          "fediverseScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "headline": {
            "type": "string"
          },
          "headlineScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "id": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "firstLoginTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "lastLoginTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "lastLogin": {
            "type": "integer",
            "format": "int64"
          },
          "locale": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "notify_email": {
            "type": [
              "string",
              "null"
            ]
          },
          "organisation": {
            "type": "string"
          },
          "organisationScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "phone": {
            "type": "string"
          },
          "phoneScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "profile_enabled": {
            "type": "string"
          },
          "profile_enabledScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "pronouns": {
            "type": "string"
          },
          "pronounsScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "quota": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsQuota"
          },
          "role": {
            "type": "string"
          },
          "roleScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "storageLocation": {
            "type": "string"
          },
          "subadmin": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "twitter": {
            "type": "string"
          },
          "twitterScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          },
          "website": {
            "type": "string"
          },
          "websiteScope": {
            "$ref": "#/components/schemas/ProvisioningApiUserDetailsScope"
          }
        },
        "required": [
          "additional_mail",
          "address",
          "backend",
          "backendCapabilities",
          "biography",
          "display-name",
          "displayname",
          "email",
          "fediverse",
          "groups",
          "headline",
          "id",
          "language",
          "firstLoginTimestamp",
          "lastLoginTimestamp",
          "lastLogin",
          "locale",
          "manager",
          "notify_email",
          "organisation",
          "phone",
          "profile_enabled",
          "pronouns",
          "quota",
          "role",
          "subadmin",
          "twitter",
          "website"
        ]
      },
      "ProvisioningApiUserDetailsQuota": {
        "type": "object",
        "properties": {
          "free": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "quota": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "string"
              }
            ]
          },
          "relative": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "total": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          },
          "used": {
            "anyOf": [
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "integer",
                "format": "int64"
              }
            ]
          }
        }
      },
      "ProvisioningApiUserDetailsScope": {
        "type": "string",
        "enum": [
          "v2-private",
          "v2-local",
          "v2-federated",
          "v2-published",
          "private",
          "contacts",
          "public"
        ]
      },
      "SettingsDeclarativeForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int64"
          },
          "section_type": {
            "type": "string",
            "enum": [
              "admin",
              "personal"
            ]
          },
          "section_id": {
            "type": "string"
          },
          "storage_type": {
            "type": "string",
            "enum": [
              "internal",
              "external"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "doc_url": {
            "type": "string"
          },
          "app": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingsDeclarativeFormField"
            }
          }
        },
        "required": [
          "id",
          "priority",
          "section_type",
          "section_id",
          "storage_type",
          "title",
          "app",
          "fields"
        ]
      },
      "SettingsDeclarativeFormField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "password",
              "email",
              "tel",
              "url",
              "number",
              "checkbox",
              "multi-checkbox",
              "radio",
              "select",
              "multi-select"
            ]
          },
          "placeholder": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "default": {
            "type": "object"
          },
          "options": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object"
                    }
                  }
                }
              ]
            }
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "type": "number",
                "format": "double"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "type",
          "default",
          "value"
        ]
      },
      "SharebymailCapabilities": {
        "type": "object",
        "properties": {
          "files_sharing": {
            "type": "object",
            "properties": {
              "sharebymail": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "send_password_by_mail": {
                    "type": "boolean"
                  },
                  "upload_files_drop": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ]
                  },
                  "password": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "enforced": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled",
                      "enforced"
                    ]
                  },
                  "expire_date": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "enforced": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled",
                      "enforced"
                    ]
                  }
                },
                "required": [
                  "enabled",
                  "send_password_by_mail",
                  "upload_files_drop",
                  "password",
                  "expire_date"
                ]
              }
            },
            "required": [
              "sharebymail"
            ]
          }
        }
      },
      "SystemtagsCapabilities": {
        "type": "object",
        "properties": {
          "systemtags": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "const": true
              }
            },
            "required": [
              "enabled"
            ]
          }
        },
        "required": [
          "systemtags"
        ]
      },
      "ThemingBackground": {
        "type": "object",
        "properties": {
          "backgroundImage": {
            "type": [
              "string",
              "null"
            ]
          },
          "backgroundColor": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "backgroundImage",
          "backgroundColor",
          "primaryColor",
          "version"
        ]
      },
      "ThemingPublicCapabilities": {
        "type": "object",
        "properties": {
          "theming": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "slogan": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "color-text": {
                "type": "string"
              },
              "color-element": {
                "type": "string"
              },
              "color-element-bright": {
                "type": "string"
              },
              "color-element-dark": {
                "type": "string"
              },
              "logo": {
                "type": "string"
              },
              "background": {
                "type": "string"
              },
              "background-text": {
                "type": "string"
              },
              "background-plain": {
                "type": "boolean"
              },
              "background-default": {
                "type": "boolean"
              },
              "logoheader": {
                "type": "string"
              },
              "favicon": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "url",
              "slogan",
              "color",
              "color-text",
              "color-element",
              "color-element-bright",
              "color-element-dark",
              "logo",
              "background",
              "background-text",
              "background-plain",
              "background-default",
              "logoheader",
              "favicon"
            ]
          }
        },
        "required": [
          "theming"
        ]
      },
      "UpdatenotificationApp": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          }
        },
        "required": [
          "appId",
          "appName"
        ]
      },
      "UserStatusCapabilities": {
        "type": "object",
        "properties": {
          "user_status": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "restore": {
                "type": "boolean"
              },
              "supports_emoji": {
                "type": "boolean"
              }
            },
            "required": [
              "enabled",
              "restore",
              "supports_emoji"
            ]
          }
        },
        "required": [
          "user_status"
        ]
      },
      "UserStatusClearAt": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "period",
              "end-of"
            ]
          },
          "time": {
            "anyOf": [
              {
                "type": "integer",
                "format": "int64"
              },
              {
                "$ref": "#/components/schemas/UserStatusClearAtTimeType"
              }
            ]
          }
        },
        "required": [
          "type",
          "time"
        ]
      },
      "UserStatusClearAtTimeType": {
        "type": "string",
        "enum": [
          "day",
          "week"
        ]
      },
      "UserStatusPredefined": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "clearAt": {
            "$ref": "#/components/schemas/UserStatusClearAt",
            "nullable": true
          }
        },
        "required": [
          "id",
          "icon",
          "message",
          "clearAt"
        ]
      },
      "UserStatusPrivate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserStatusPublic"
          },
          {
            "type": "object",
            "required": [
              "messageId",
              "messageIsPredefined",
              "statusIsUserDefined"
            ],
            "properties": {
              "messageId": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "messageIsPredefined": {
                "type": "boolean"
              },
              "statusIsUserDefined": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "UserStatusPublic": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "icon": {
            "type": [
              "string",
              "null"
            ]
          },
          "clearAt": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatusType"
          }
        },
        "required": [
          "userId",
          "message",
          "icon",
          "clearAt",
          "status"
        ]
      },
      "UserStatusType": {
        "type": "string",
        "enum": [
          "online",
          "away",
          "dnd",
          "busy",
          "offline",
          "invisible"
        ]
      },
      "WeatherStatusCapabilities": {
        "type": "object",
        "properties": {
          "weather_status": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "enabled"
            ]
          }
        },
        "required": [
          "weather_status"
        ]
      },
      "WeatherStatusForecast": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "instant": {
                "type": "object",
                "properties": {
                  "details": {
                    "type": "object",
                    "properties": {
                      "air_pressure_at_sea_level": {
                        "type": "number"
                      },
                      "air_temperature": {
                        "type": "number"
                      },
                      "cloud_area_fraction": {
                        "type": "number"
                      },
                      "relative_humidity": {
                        "type": "number"
                      },
                      "wind_from_direction": {
                        "type": "number"
                      },
                      "wind_speed": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "air_pressure_at_sea_level",
                      "air_temperature",
                      "cloud_area_fraction",
                      "relative_humidity",
                      "wind_from_direction",
                      "wind_speed"
                    ]
                  }
                },
                "required": [
                  "details"
                ]
              },
              "next_12_hours": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "object",
                    "properties": {
                      "symbol_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "symbol_code"
                    ]
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "precipitation_amount": {
                        "type": "number"
                      }
                    }
                  }
                },
                "required": [
                  "summary",
                  "details"
                ]
              },
              "next_1_hours": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "object",
                    "properties": {
                      "symbol_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "symbol_code"
                    ]
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "precipitation_amount": {
                        "type": "number"
                      }
                    }
                  }
                },
                "required": [
                  "summary",
                  "details"
                ]
              },
              "next_6_hours": {
                "type": "object",
                "properties": {
                  "summary": {
                    "type": "object",
                    "properties": {
                      "symbol_code": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "symbol_code"
                    ]
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "precipitation_amount": {
                        "type": "number"
                      }
                    }
                  }
                },
                "required": [
                  "summary",
                  "details"
                ]
              }
            },
            "required": [
              "instant",
              "next_12_hours",
              "next_1_hours",
              "next_6_hours"
            ]
          }
        },
        "required": [
          "time",
          "data"
        ]
      },
      "WeatherStatusLocation": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "string"
          },
          "lon": {
            "type": "string"
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "WeatherStatusLocationWithMode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WeatherStatusLocation"
          },
          {
            "$ref": "#/components/schemas/WeatherStatusMode"
          }
        ]
      },
      "WeatherStatusLocationWithSuccess": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WeatherStatusLocation"
          },
          {
            "$ref": "#/components/schemas/WeatherStatusSuccess"
          }
        ]
      },
      "WeatherStatusMode": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "mode"
        ]
      },
      "WeatherStatusSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "WebhookListenersWebhookInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "httpMethod": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "eventFilter": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "userIdFilter": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authMethod": {
            "type": "string"
          },
          "authData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "required": [
          "id",
          "userId",
          "httpMethod",
          "uri",
          "authMethod"
        ]
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "core/avatar",
      "description": "Class AvatarController"
    },
    {
      "name": "core/guest_avatar",
      "description": "This controller handles guest avatar requests."
    },
    {
      "name": "core/ocm",
      "description": "Controller about the endpoint /ocm-provider/"
    },
    {
      "name": "cloud_federation_api/request_handler",
      "description": "Open-Cloud-Mesh-API"
    },
    {
      "name": "federatedfilesharing/mount_public_link",
      "description": "Class MountPublicLinkController\nconvert public links to federated shares"
    },
    {
      "name": "theming/theming",
      "description": "Class ThemingController\nhandle ajax requests to update the theme"
    }
  ],
  "security": [
    {
      "basic_auth": []
    },
    {
      "bearer_auth": []
    }
  ]
}