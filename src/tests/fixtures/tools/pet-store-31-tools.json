{
    "/pet": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/pet+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /pet  * Summary: Add a new pet to the store  * Description: Add a new pet to the store",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                },
                                "application/x-www-form-urlencoded": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                },
                                "application/xml": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "requestBody"
                ]
            }
        },
        "PUT": {
            "type": "function",
            "function": {
                "name": "/pet+PUT",
                "description": "Apply the HTTP verb PUT to the REST API endpoint described by:   * Path: /pet  * Summary: Update an existing pet  * Description: Update an existing pet by Id",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                },
                                "application/x-www-form-urlencoded": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                },
                                "application/xml": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "name": {
                                            "type": "string",
                                            "examples": [
                                                "doggie"
                                            ]
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "examples": [
                                                        1
                                                    ]
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "examples": [
                                                        "Dogs"
                                                    ]
                                                }
                                            },
                                            "xml": {
                                                "name": "category"
                                            }
                                        },
                                        "photoUrls": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "xml": {
                                                    "name": "photoUrl"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "xml": {
                                                    "name": "tag"
                                                }
                                            },
                                            "xml": {
                                                "wrapped": true
                                            }
                                        },
                                        "status": {
                                            "description": "pet status in the store",
                                            "type": "string",
                                            "enum": [
                                                "available",
                                                "pending",
                                                "sold"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "photoUrls"
                                    ],
                                    "xml": {
                                        "name": "pet"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "requestBody"
                ]
            }
        }
    },
    "/pet/findByStatus": {},
    "/pet/findByTags": {},
    "/pet/{petId}": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/pet/{petId}+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /pet/{petId}  * Summary: Updates a pet in the store with form data",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "path+petId": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of pet that needs to be updated"
                        },
                        "query+name": {
                            "type": "string",
                            "description": "Name of pet that needs to be updated"
                        },
                        "query+status": {
                            "type": "string",
                            "description": "Status of pet that needs to be updated"
                        }
                    }
                },
                "required": [
                    "path+petId"
                ]
            }
        },
        "DELETE": {
            "type": "function",
            "function": {
                "name": "/pet/{petId}+DELETE",
                "description": "Apply the HTTP verb DELETE to the REST API endpoint described by:   * Path: /pet/{petId}  * Summary: Deletes a pet",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "header+api_key": {
                            "type": "string",
                            "description": ""
                        },
                        "path+petId": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Pet id to delete"
                        }
                    }
                },
                "required": [
                    "path+petId"
                ]
            }
        }
    },
    "/pet/{petId}/uploadImage": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/pet/{petId}/uploadImage+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /pet/{petId}/uploadImage  * Summary: uploads an image",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "path+petId": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of pet to update"
                        },
                        "query+additionalMetadata": {
                            "type": "string",
                            "description": "Additional Metadata"
                        },
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/octet-stream": {}
                            }
                        }
                    }
                },
                "required": [
                    "path+petId"
                ]
            }
        }
    },
    "/store/inventory": {},
    "/store/order": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/store/order+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /store/order  * Summary: Place an order for a pet  * Description: Place a new order in the store",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "petId": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                198772
                                            ]
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                7
                                            ]
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "description": "Order Status",
                                            "type": "string",
                                            "examples": [
                                                "approved"
                                            ],
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ]
                                        },
                                        "complete": {
                                            "type": "boolean"
                                        }
                                    },
                                    "xml": {
                                        "name": "order"
                                    }
                                },
                                "application/x-www-form-urlencoded": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "petId": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                198772
                                            ]
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                7
                                            ]
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "description": "Order Status",
                                            "type": "string",
                                            "examples": [
                                                "approved"
                                            ],
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ]
                                        },
                                        "complete": {
                                            "type": "boolean"
                                        }
                                    },
                                    "xml": {
                                        "name": "order"
                                    }
                                },
                                "application/xml": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "petId": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                198772
                                            ]
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                7
                                            ]
                                        },
                                        "shipDate": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "status": {
                                            "description": "Order Status",
                                            "type": "string",
                                            "examples": [
                                                "approved"
                                            ],
                                            "enum": [
                                                "placed",
                                                "approved",
                                                "delivered"
                                            ]
                                        },
                                        "complete": {
                                            "type": "boolean"
                                        }
                                    },
                                    "xml": {
                                        "name": "order"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": []
            }
        }
    },
    "/store/order/{orderId}": {
        "DELETE": {
            "type": "function",
            "function": {
                "name": "/store/order/{orderId}+DELETE",
                "description": "Apply the HTTP verb DELETE to the REST API endpoint described by:   * Path: /store/order/{orderId}  * Summary: Delete purchase order by ID  * Description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "path+orderId": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the order that needs to be deleted"
                        }
                    }
                },
                "required": [
                    "path+orderId"
                ]
            }
        }
    },
    "/user": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/user+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /user  * Summary: Create user  * Description: This can only be done by the logged in user.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                },
                                "application/x-www-form-urlencoded": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                },
                                "application/xml": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": []
            }
        }
    },
    "/user/createWithList": {
        "POST": {
            "type": "function",
            "function": {
                "name": "/user/createWithList+POST",
                "description": "Apply the HTTP verb POST to the REST API endpoint described by:   * Path: /user/createWithList  * Summary: Creates list of users with given input array  * Description: Creates list of users with given input array",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "examples": [
                                                    10
                                                ]
                                            },
                                            "username": {
                                                "type": "string",
                                                "examples": [
                                                    "theUser"
                                                ]
                                            },
                                            "firstName": {
                                                "type": "string",
                                                "examples": [
                                                    "John"
                                                ]
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "examples": [
                                                    "James"
                                                ]
                                            },
                                            "email": {
                                                "type": "string",
                                                "examples": [
                                                    "john@email.com"
                                                ]
                                            },
                                            "password": {
                                                "type": "string",
                                                "examples": [
                                                    "12345"
                                                ]
                                            },
                                            "phone": {
                                                "type": "string",
                                                "examples": [
                                                    "12345"
                                                ]
                                            },
                                            "userStatus": {
                                                "description": "User Status",
                                                "type": "integer",
                                                "format": "int32",
                                                "examples": [
                                                    1
                                                ]
                                            }
                                        },
                                        "xml": {
                                            "name": "user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": []
            }
        }
    },
    "/user/login": {},
    "/user/logout": {},
    "/user/{username}": {
        "PUT": {
            "type": "function",
            "function": {
                "name": "/user/{username}+PUT",
                "description": "Apply the HTTP verb PUT to the REST API endpoint described by:   * Path: /user/{username}  * Summary: Update user  * Description: This can only be done by the logged in user.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "path+username": {
                            "type": "string",
                            "description": "name that needs to be updated"
                        },
                        "requestBody": {
                            "type": "object",
                            "oneOf": {
                                "application/json": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                },
                                "application/x-www-form-urlencoded": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                },
                                "application/xml": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "examples": [
                                                10
                                            ]
                                        },
                                        "username": {
                                            "type": "string",
                                            "examples": [
                                                "theUser"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "examples": [
                                                "John"
                                            ]
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "examples": [
                                                "James"
                                            ]
                                        },
                                        "email": {
                                            "type": "string",
                                            "examples": [
                                                "john@email.com"
                                            ]
                                        },
                                        "password": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "phone": {
                                            "type": "string",
                                            "examples": [
                                                "12345"
                                            ]
                                        },
                                        "userStatus": {
                                            "description": "User Status",
                                            "type": "integer",
                                            "format": "int32",
                                            "examples": [
                                                1
                                            ]
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "path+username"
                ]
            }
        },
        "DELETE": {
            "type": "function",
            "function": {
                "name": "/user/{username}+DELETE",
                "description": "Apply the HTTP verb DELETE to the REST API endpoint described by:   * Path: /user/{username}  * Summary: Delete user  * Description: This can only be done by the logged in user.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "path+username": {
                            "type": "string",
                            "description": "The name that needs to be deleted"
                        }
                    }
                },
                "required": [
                    "path+username"
                ]
            }
        }
    }
}